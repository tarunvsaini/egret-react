{"ast":null,"code":"import _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _objectSpread from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/Drag&Drop/TwoListDnD.jsx\";\nimport React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"; // fake data generator\n\nvar getItems = function getItems(count) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return Array.from({\n    length: count\n  }, function (v, k) {\n    return k;\n  }).map(function (k) {\n    return {\n      id: \"item-\".concat(k + offset),\n      content: \"item \".concat(k + offset)\n    };\n  });\n}; // a little function to help us with reordering the result\n\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n * Moves an item from one list to another list.\n */\n\n\nvar move = function move(source, destination, droppableSource, droppableDestination) {\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n\n  var _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n      _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n      removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  var result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nvar grid = 8;\n\nvar getItemStyle = function getItemStyle(isDragging, draggableStyle) {\n  return _objectSpread({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: \"0 0 \".concat(grid, \"px 0\"),\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"grey\"\n  }, draggableStyle);\n};\n\nvar getListStyle = function getListStyle(isDraggingOver) {\n  return {\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid,\n    width: 250\n  };\n};\n\nvar TwoListDnD = /*#__PURE__*/function (_Component) {\n  _inherits(TwoListDnD, _Component);\n\n  var _super = _createSuper(TwoListDnD);\n\n  function TwoListDnD() {\n    var _this;\n\n    _classCallCheck(this, TwoListDnD);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      items: getItems(10),\n      selected: getItems(5, 10)\n    };\n    _this.id2List = {\n      droppable: \"items\",\n      droppable2: \"selected\"\n    };\n\n    _this.getList = function (id) {\n      return _this.state[_this.id2List[id]];\n    };\n\n    _this.onDragEnd = function (result) {\n      var source = result.source,\n          destination = result.destination; // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        var items = reorder(_this.getList(source.droppableId), source.index, destination.index);\n        var state = {\n          items: items\n        };\n\n        if (source.droppableId === \"droppable2\") {\n          state = {\n            selected: items\n          };\n        }\n\n        _this.setState(state);\n      } else {\n        var _result = move(_this.getList(source.droppableId), _this.getList(destination.droppableId), source, destination);\n\n        _this.setState({\n          items: _result.droppable,\n          selected: _result.droppable2\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TwoListDnD, [{\n    key: \"render\",\n    value: // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n    function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-around\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"droppable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          ref: provided.innerRef,\n          style: getListStyle(snapshot.isDraggingOver),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }\n        }, _this2.state.items.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id,\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 23\n              }\n            }), item.content);\n          });\n        }), provided.placeholder);\n      }), /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"droppable2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          ref: provided.innerRef,\n          style: getListStyle(snapshot.isDraggingOver),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }\n        }, _this2.state.selected.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id,\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }\n            }), item.content);\n          });\n        }), provided.placeholder);\n      })));\n    }\n  }]);\n\n  return TwoListDnD;\n}(Component);\n\nexport default TwoListDnD;","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/Drag&Drop/TwoListDnD.jsx"],"names":["React","Component","DragDropContext","Droppable","Draggable","getItems","count","offset","Array","from","length","v","k","map","id","content","reorder","list","startIndex","endIndex","result","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","width","TwoListDnD","state","items","selected","id2List","droppable","droppable2","getList","onDragEnd","setState","provided","snapshot","innerRef","item","draggableProps","dragHandleProps","style","placeholder"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,MAAQC,MAAR,uEAAiB,CAAjB;AAAA,SACfC,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEJ;AAAV,GAAX,EAA8B,UAACK,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAV;AAAA,GAA9B,EAA2CC,GAA3C,CAA+C,UAAAD,CAAC;AAAA,WAAK;AACnDE,MAAAA,EAAE,iBAAUF,CAAC,GAAGL,MAAd,CADiD;AAEnDQ,MAAAA,OAAO,iBAAUH,CAAC,GAAGL,MAAd;AAF4C,KAAL;AAAA,GAAhD,CADe;AAAA,CAAjB,C,CAMA;;;AACA,IAAMS,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,UAAP,EAAmBC,QAAnB,EAAgC;AAC9C,MAAMC,MAAM,GAAGZ,KAAK,CAACC,IAAN,CAAWQ,IAAX,CAAf;;AACA,uBAAkBG,MAAM,CAACC,MAAP,CAAcH,UAAd,EAA0B,CAA1B,CAAlB;AAAA;AAAA,MAAOI,OAAP;;AACAF,EAAAA,MAAM,CAACC,MAAP,CAAcF,QAAd,EAAwB,CAAxB,EAA2BG,OAA3B;AAEA,SAAOF,MAAP;AACD,CAND;AAQA;AACA;AACA;;;AACA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACC,MAAD,EAASC,WAAT,EAAsBC,eAAtB,EAAuCC,oBAAvC,EAAgE;AAC3E,MAAMC,WAAW,GAAGpB,KAAK,CAACC,IAAN,CAAWe,MAAX,CAApB;AACA,MAAMK,SAAS,GAAGrB,KAAK,CAACC,IAAN,CAAWgB,WAAX,CAAlB;;AACA,4BAAkBG,WAAW,CAACP,MAAZ,CAAmBK,eAAe,CAACI,KAAnC,EAA0C,CAA1C,CAAlB;AAAA;AAAA,MAAOR,OAAP;;AAEAO,EAAAA,SAAS,CAACR,MAAV,CAAiBM,oBAAoB,CAACG,KAAtC,EAA6C,CAA7C,EAAgDR,OAAhD;AAEA,MAAMF,MAAM,GAAG,EAAf;AACAA,EAAAA,MAAM,CAACM,eAAe,CAACK,WAAjB,CAAN,GAAsCH,WAAtC;AACAR,EAAAA,MAAM,CAACO,oBAAoB,CAACI,WAAtB,CAAN,GAA2CF,SAA3C;AAEA,SAAOT,MAAP;AACD,CAZD;;AAcA,IAAMY,IAAI,GAAG,CAAb;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAaC,cAAb;AAAA;AACnB;AACAC,IAAAA,UAAU,EAAE,MAFO;AAGnBC,IAAAA,OAAO,EAAEL,IAAI,GAAG,CAHG;AAInBM,IAAAA,MAAM,gBAASN,IAAT,SAJa;AAMnB;AACAO,IAAAA,UAAU,EAAEL,UAAU,GAAG,YAAH,GAAkB;AAPrB,KAUhBC,cAVgB;AAAA,CAArB;;AAaA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAC,cAAc;AAAA,SAAK;AACtCF,IAAAA,UAAU,EAAEE,cAAc,GAAG,WAAH,GAAiB,WADL;AAEtCJ,IAAAA,OAAO,EAAEL,IAF6B;AAGtCU,IAAAA,KAAK,EAAE;AAH+B,GAAL;AAAA,CAAnC;;IAMMC,U;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAExC,QAAQ,CAAC,EAAD,CADT;AAENyC,MAAAA,QAAQ,EAAEzC,QAAQ,CAAC,CAAD,EAAI,EAAJ;AAFZ,K;UAUR0C,O,GAAU;AACRC,MAAAA,SAAS,EAAE,OADH;AAERC,MAAAA,UAAU,EAAE;AAFJ,K;;UAKVC,O,GAAU,UAAApC,EAAE;AAAA,aAAI,MAAK8B,KAAL,CAAW,MAAKG,OAAL,CAAajC,EAAb,CAAX,CAAJ;AAAA,K;;UAEZqC,S,GAAY,UAAA/B,MAAM,EAAI;AACpB,UAAQI,MAAR,GAAgCJ,MAAhC,CAAQI,MAAR;AAAA,UAAgBC,WAAhB,GAAgCL,MAAhC,CAAgBK,WAAhB,CADoB,CAGpB;;AACA,UAAI,CAACA,WAAL,EAAkB;AAChB;AACD;;AAED,UAAID,MAAM,CAACO,WAAP,KAAuBN,WAAW,CAACM,WAAvC,EAAoD;AAClD,YAAMc,KAAK,GAAG7B,OAAO,CACnB,MAAKkC,OAAL,CAAa1B,MAAM,CAACO,WAApB,CADmB,EAEnBP,MAAM,CAACM,KAFY,EAGnBL,WAAW,CAACK,KAHO,CAArB;AAMA,YAAIc,KAAK,GAAG;AAAEC,UAAAA,KAAK,EAALA;AAAF,SAAZ;;AAEA,YAAIrB,MAAM,CAACO,WAAP,KAAuB,YAA3B,EAAyC;AACvCa,UAAAA,KAAK,GAAG;AAAEE,YAAAA,QAAQ,EAAED;AAAZ,WAAR;AACD;;AAED,cAAKO,QAAL,CAAcR,KAAd;AACD,OAdD,MAcO;AACL,YAAMxB,OAAM,GAAGG,IAAI,CACjB,MAAK2B,OAAL,CAAa1B,MAAM,CAACO,WAApB,CADiB,EAEjB,MAAKmB,OAAL,CAAazB,WAAW,CAACM,WAAzB,CAFiB,EAGjBP,MAHiB,EAIjBC,WAJiB,CAAnB;;AAOA,cAAK2B,QAAL,CAAc;AACZP,UAAAA,KAAK,EAAEzB,OAAM,CAAC4B,SADF;AAEZF,UAAAA,QAAQ,EAAE1B,OAAM,CAAC6B;AAFL,SAAd;AAID;AACF,K;;;;;;;WAED;AACA;AACA,sBAAS;AAAA;;AACP,0BACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,KAAKE,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAACE,QAAD,EAAWC,QAAX;AAAA,4BACC;AACE,UAAA,GAAG,EAAED,QAAQ,CAACE,QADhB;AAEE,UAAA,KAAK,EAAEf,YAAY,CAACc,QAAQ,CAACb,cAAV,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,MAAI,CAACG,KAAL,CAAWC,KAAX,CAAiBhC,GAAjB,CAAqB,UAAC2C,IAAD,EAAO1B,KAAP;AAAA,8BACpB,oBAAC,SAAD;AAAW,YAAA,GAAG,EAAE0B,IAAI,CAAC1C,EAArB;AAAyB,YAAA,WAAW,EAAE0C,IAAI,CAAC1C,EAA3C;AAA+C,YAAA,KAAK,EAAEgB,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,UAACuB,QAAD,EAAWC,QAAX;AAAA,gCACC;AACE,cAAA,GAAG,EAAED,QAAQ,CAACE;AADhB,eAEMF,QAAQ,CAACI,cAFf,EAGMJ,QAAQ,CAACK,eAHf;AAIE,cAAA,KAAK,EAAEzB,YAAY,CACjBqB,QAAQ,CAACpB,UADQ,EAEjBmB,QAAQ,CAACI,cAAT,CAAwBE,KAFP,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBASGH,IAAI,CAACzC,OATR,CADD;AAAA,WADH,CADoB;AAAA,SAArB,CAJH,EAqBGsC,QAAQ,CAACO,WArBZ,CADD;AAAA,OADH,CADF,eA4BE,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAACP,QAAD,EAAWC,QAAX;AAAA,4BACC;AACE,UAAA,GAAG,EAAED,QAAQ,CAACE,QADhB;AAEE,UAAA,KAAK,EAAEf,YAAY,CAACc,QAAQ,CAACb,cAAV,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,MAAI,CAACG,KAAL,CAAWE,QAAX,CAAoBjC,GAApB,CAAwB,UAAC2C,IAAD,EAAO1B,KAAP;AAAA,8BACvB,oBAAC,SAAD;AAAW,YAAA,GAAG,EAAE0B,IAAI,CAAC1C,EAArB;AAAyB,YAAA,WAAW,EAAE0C,IAAI,CAAC1C,EAA3C;AAA+C,YAAA,KAAK,EAAEgB,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,UAACuB,QAAD,EAAWC,QAAX;AAAA,gCACC;AACE,cAAA,GAAG,EAAED,QAAQ,CAACE;AADhB,eAEMF,QAAQ,CAACI,cAFf,EAGMJ,QAAQ,CAACK,eAHf;AAIE,cAAA,KAAK,EAAEzB,YAAY,CACjBqB,QAAQ,CAACpB,UADQ,EAEjBmB,QAAQ,CAACI,cAAT,CAAwBE,KAFP,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBASGH,IAAI,CAACzC,OATR,CADD;AAAA,WADH,CADuB;AAAA,SAAxB,CAJH,EAqBGsC,QAAQ,CAACO,WArBZ,CADD;AAAA,OADH,CA5BF,CADF,CADF;AA4DD;;;;EAtHsB3D,S;;AAyHzB,eAAe0C,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// fake data generator\nconst getItems = (count, offset = 0) =>\n  Array.from({ length: count }, (v, k) => k).map(k => ({\n    id: `item-${k + offset}`,\n    content: `item ${k + offset}`\n  }));\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250\n});\n\nclass TwoListDnD extends Component {\n  state = {\n    items: getItems(10),\n    selected: getItems(5, 10)\n  };\n\n  /**\n   * A semi-generic way to handle multiple lists. Matches\n   * the IDs of the droppable container to the names of the\n   * source arrays stored in the state.\n   */\n  id2List = {\n    droppable: \"items\",\n    droppable2: \"selected\"\n  };\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      let state = { items };\n\n      if (source.droppableId === \"droppable2\") {\n        state = { selected: items };\n      }\n\n      this.setState(state);\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      this.setState({\n        items: result.droppable,\n        selected: result.droppable2\n      });\n    }\n  };\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"flex flex-space-around\">\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver)}\n              >\n                {this.state.items.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        {item.content}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          <Droppable droppableId=\"droppable2\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver)}\n              >\n                {this.state.selected.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        {item.content}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nexport default TwoListDnD;\n"]},"metadata":{},"sourceType":"module"}