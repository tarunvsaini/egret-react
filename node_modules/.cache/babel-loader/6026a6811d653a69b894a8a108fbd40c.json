{"ast":null,"code":"import _defineProperty from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/ecommerce/Checkout.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Card, Grid, FormControlLabel, Checkbox, Button, MenuItem, Divider } from \"@material-ui/core\";\nimport { countries } from \"./Country\";\nimport PaymentDialog from \"./PaymentDialog\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nvar Checkout = /*#__PURE__*/function (_Component) {\n  _inherits(Checkout, _Component);\n\n  var _super = _createSuper(Checkout);\n\n  function Checkout() {\n    var _this;\n\n    _classCallCheck(this, Checkout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      company: \"\",\n      email: \"\",\n      mobile: \"\",\n      country: \"United States\",\n      city: \"\",\n      address: \"\",\n      open: false\n    };\n\n    _this.getTotalCost = function () {\n      var _this$props$cartList = _this.props.cartList,\n          cartList = _this$props$cartList === void 0 ? [] : _this$props$cartList;\n      var totalCost = 0;\n      cartList.map(function (product) {\n        totalCost += product.amount * product.price;\n      });\n      return totalCost;\n    };\n\n    _this.handleChange = function (event) {\n      event.persist();\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function () {\n      _this.toggleDialog();\n    };\n\n    _this.toggleDialog = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Checkout, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          company = _this$state.company,\n          email = _this$state.email,\n          mobile = _this$state.mobile,\n          country = _this$state.country,\n          city = _this$state.city,\n          address = _this$state.address;\n      var _this$props$cartList2 = this.props.cartList,\n          cartList = _this$props$cartList2 === void 0 ? [] : _this$props$cartList2;\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"checkout m-sm-30 p-sm-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleSubmit,\n        onError: function onError(errors) {\n          return null;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"font-weight-500 mt-0 mb-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \"Billing Details\"), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 7,\n        md: 7,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        className: \"mb-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        variant: \"outlined\",\n        label: \"First Name\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"firstName\",\n        value: firstName,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        variant: \"outlined\",\n        label: \"Last Name\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"lastName\",\n        value: lastName,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-20\",\n        variant: \"outlined\",\n        label: \"Company\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"company\",\n        value: company,\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        className: \"mb-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        variant: \"outlined\",\n        label: \"Email\",\n        onChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        validators: [\"required\", \"isEmail\"],\n        errorMessages: [\"this field is required\", \"email is not valid\"],\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        variant: \"outlined\",\n        label: \"Mobile\",\n        onChange: this.handleChange,\n        type: \"number\",\n        name: \"mobile\",\n        value: mobile,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        className: \"mb-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: \"Country\",\n        select: true,\n        name: \"country\",\n        variant: \"outlined\",\n        value: country,\n        onChange: this.handleChange,\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }\n      }, countries.map(function (country) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: country.code,\n          value: country.name,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 23\n          }\n        }, country.name);\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        variant: \"outlined\",\n        label: \"City\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"city\",\n        value: city,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(TextValidator, {\n        variant: \"outlined\",\n        className: \"mb-20\",\n        label: \"Address\\\\\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"address\",\n        value: address,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 26\n          }\n        }),\n        label: \"Create an account?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, \"Porduct\"), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }, \"Total Price\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkout__product-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      }, cartList.map(function (product) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          key: product.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flex flex-space-between py-16\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"text-muted pr-8\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 23\n          }\n        }, product.title), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"text-muted\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 23\n          }\n        }, \"$\", product.price * product.amount)), /*#__PURE__*/React.createElement(Divider, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }\n        }));\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between mb-32 mt-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }\n      }, \"Total\"), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 19\n        }\n      }, \"$\", this.getTotalCost().toFixed(2))), /*#__PURE__*/React.createElement(Button, {\n        className: \"w-100\",\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, \"Place Order\"))))), /*#__PURE__*/React.createElement(PaymentDialog, {\n        open: this.state.open,\n        toggleDialog: this.toggleDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Checkout;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartList: state.ecommerce.cartList,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {})(Checkout);","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/ecommerce/Checkout.jsx"],"names":["React","Component","Fragment","ValidatorForm","TextValidator","Card","Grid","FormControlLabel","Checkbox","Button","MenuItem","Divider","countries","PaymentDialog","PropTypes","connect","Checkout","state","firstName","lastName","company","email","mobile","country","city","address","open","getTotalCost","props","cartList","totalCost","map","product","amount","price","handleChange","event","persist","setState","target","name","value","handleSubmit","toggleDialog","errors","code","id","title","toFixed","mapStateToProps","ecommerce","user"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,gBAHF,EAIEC,QAJF,EAKEC,MALF,EAMEC,QANF,EAOEC,OAPF,QAQO,mBARP;AASA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,Q;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNC,MAAAA,OAAO,EAAE,eANH;AAONC,MAAAA,IAAI,EAAE,EAPA;AAQNC,MAAAA,OAAO,EAAE,EARH;AASNC,MAAAA,IAAI,EAAE;AATA,K;;UAYRC,Y,GAAe,YAAM;AACnB,iCAAwB,MAAKC,KAA7B,CAAMC,QAAN;AAAA,UAAMA,QAAN,qCAAiB,EAAjB;AACA,UAAIC,SAAS,GAAG,CAAhB;AACAD,MAAAA,QAAQ,CAACE,GAAT,CAAa,UAAAC,OAAO,EAAI;AACtBF,QAAAA,SAAS,IAAIE,OAAO,CAACC,MAAR,GAAiBD,OAAO,CAACE,KAAtC;AACD,OAFD;AAGA,aAAOJ,SAAP;AACD,K;;UAEDK,Y,GAAe,UAAAC,KAAK,EAAI;AACtBA,MAAAA,KAAK,CAACC,OAAN;;AACA,YAAKC,QAAL,qBAAiBF,KAAK,CAACG,MAAN,CAAaC,IAA9B,EAAqCJ,KAAK,CAACG,MAAN,CAAaE,KAAlD;AACD,K;;UAEDC,Y,GAAe,YAAM;AACnB,YAAKC,YAAL;AACD,K;;UAEDA,Y,GAAe,YAAM;AACnB,YAAKL,QAAL,CAAc;AAAEZ,QAAAA,IAAI,EAAE,CAAC,MAAKT,KAAL,CAAWS;AAApB,OAAd;AACD,K;;;;;;;WAED,kBAAS;AAAA;;AACP,wBASI,KAAKT,KATT;AAAA,UACEC,SADF,eACEA,SADF;AAAA,UAEEC,QAFF,eAEEA,QAFF;AAAA,UAGEC,OAHF,eAGEA,OAHF;AAAA,UAIEC,KAJF,eAIEA,KAJF;AAAA,UAKEC,MALF,eAKEA,MALF;AAAA,UAMEC,OANF,eAMEA,OANF;AAAA,UAOEC,IAPF,eAOEA,IAPF;AAAA,UAQEC,OARF,eAQEA,OARF;AAWA,kCAAwB,KAAKG,KAA7B,CAAMC,QAAN;AAAA,UAAMA,QAAN,sCAAiB,EAAjB;AAEA,0BACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AACE,QAAA,GAAG,EAAC,MADN;AAEE,QAAA,QAAQ,EAAE,KAAKa,YAFjB;AAGE,QAAA,OAAO,EAAE,iBAAAE,MAAM;AAAA,iBAAI,IAAJ;AAAA,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAI,QAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,eAME,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,EAA7B;AAAiC,QAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,QAAQ,EAAE,KAAKT,YAHjB;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,IAAI,EAAC,WALP;AAME,QAAA,KAAK,EAAEjB,SANT;AAOE,QAAA,UAAU,EAAE,CAAC,UAAD,CAPd;AAQE,QAAA,aAAa,EAAE,CAAC,wBAAD,CARjB;AASE,QAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAcE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,QAAQ,EAAE,KAAKiB,YAHjB;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,KAAK,EAAEhB,QANT;AAOE,QAAA,UAAU,EAAE,CAAC,UAAD,CAPd;AAQE,QAAA,aAAa,EAAE,CAAC,wBAAD,CARjB;AASE,QAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAdF,CADF,eA8BE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,QAAQ,EAAE,KAAKgB,YAJjB;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,IAAI,EAAC,SANP;AAOE,QAAA,KAAK,EAAEf,OAPT;AAQE,QAAA,SAAS,MARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF,eAyCE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,QAAQ,EAAE,KAAKe,YAHjB;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,KAAK,EAAEd,KANT;AAOE,QAAA,UAAU,EAAE,CAAC,UAAD,EAAa,SAAb,CAPd;AAQE,QAAA,aAAa,EAAE,CACb,wBADa,EAEb,oBAFa,CARjB;AAYE,QAAA,SAAS,MAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAiBE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,QAAQ,EAAE,KAAKc,YAHjB;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,KAAK,EAAEb,MANT;AAOE,QAAA,UAAU,EAAE,CAAC,UAAD,CAPd;AAQE,QAAA,aAAa,EAAE,CAAC,wBAAD,CARjB;AASE,QAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAjBF,CAzCF,eAyEE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,OAAO,EAAC,UAJV;AAKE,QAAA,KAAK,EAAEC,OALT;AAME,QAAA,QAAQ,EAAE,KAAKY,YANjB;AAOE,QAAA,SAAS,MAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASGvB,SAAS,CAACmB,GAAV,CAAc,UAAAR,OAAO;AAAA,4BACpB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,OAAO,CAACsB,IAAvB;AAA6B,UAAA,KAAK,EAAEtB,OAAO,CAACiB,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGjB,OAAO,CAACiB,IADX,CADoB;AAAA,OAArB,CATH,CADF,CADF,eAkBE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,QAAQ,EAAE,KAAKL,YAHjB;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,KAAK,EAAEX,IANT;AAOE,QAAA,UAAU,EAAE,CAAC,UAAD,CAPd;AAQE,QAAA,aAAa,EAAE,CAAC,wBAAD,CARjB;AASE,QAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAlBF,CAzEF,eA0GE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,QAAQ,EAAE,KAAKW,YAJjB;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,IAAI,EAAC,SANP;AAOE,QAAA,KAAK,EAAEV,OAPT;AAQE,QAAA,UAAU,EAAE,CAAC,UAAD,CARd;AASE,QAAA,aAAa,EAAE,CAAC,wBAAD,CATjB;AAUE,QAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1GF,eAuHE,oBAAC,gBAAD;AACE,QAAA,OAAO,eAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADX;AAEE,QAAA,KAAK,EAAC,oBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvHF,CADF,eA6HE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,EAA7B;AAAiC,QAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,eAKE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,QAAQ,CAACE,GAAT,CAAa,UAAAC,OAAO;AAAA,4BACnB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,OAAO,CAACc,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmCd,OAAO,CAACe,KAA3C,CADF,eAEE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACIf,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACC,MAD5B,CAFF,CADF,eAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADmB;AAAA,OAApB,CADH,eAYE;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsB,KAAKN,YAAL,GAAoBqB,OAApB,CAA4B,CAA5B,CAAtB,CAFF,CAZF,eAgBE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAhBF,CALF,CA7HF,CANF,CADF,eAsKE,oBAAC,aAAD;AACE,QAAA,IAAI,EAAE,KAAK/B,KAAL,CAAWS,IADnB;AAEE,QAAA,YAAY,EAAE,KAAKiB,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtKF,CADF;AA6KD;;;;EA9NoB1C,S;;AAiOvB,IAAMgD,eAAe,GAAG,SAAlBA,eAAkB,CAAAhC,KAAK;AAAA,SAAK;AAChCY,IAAAA,QAAQ,EAAEZ,KAAK,CAACiC,SAAN,CAAgBrB,QADM;AAEhCsB,IAAAA,IAAI,EAAElC,KAAK,CAACkC;AAFoB,GAAL;AAAA,CAA7B;;AAKA,eAAepC,OAAO,CACpBkC,eADoB,EAEpB,EAFoB,CAAP,CAGbjC,QAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  Card,\n  Grid,\n  FormControlLabel,\n  Checkbox,\n  Button,\n  MenuItem,\n  Divider\n} from \"@material-ui/core\";\nimport { countries } from \"./Country\";\nimport PaymentDialog from \"./PaymentDialog\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    company: \"\",\n    email: \"\",\n    mobile: \"\",\n    country: \"United States\",\n    city: \"\",\n    address: \"\",\n    open: false\n  };\n\n  getTotalCost = () => {\n    let { cartList = [] } = this.props;\n    let totalCost = 0;\n    cartList.map(product => {\n      totalCost += product.amount * product.price;\n    });\n    return totalCost;\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = () => {\n    this.toggleDialog();\n  };\n\n  toggleDialog = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  render() {\n    let {\n      firstName,\n      lastName,\n      company,\n      email,\n      mobile,\n      country,\n      city,\n      address\n    } = this.state;\n\n    let { cartList = [] } = this.props;\n\n    return (\n      <Card className=\"checkout m-sm-30 p-sm-24\">\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => null}\n        >\n          <h5 className=\"font-weight-500 mt-0 mb-24\">Billing Details</h5>\n          <Grid container spacing={3}>\n            <Grid item lg={7} md={7} sm={12} xs={12}>\n              <Grid container spacing={3} className=\"mb-8\">\n                <Grid item xs={6}>\n                  <TextValidator\n                    variant=\"outlined\"\n                    label=\"First Name\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={firstName}\n                    validators={[\"required\"]}\n                    errorMessages={[\"this field is required\"]}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextValidator\n                    variant=\"outlined\"\n                    label=\"Last Name\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    name=\"lastName\"\n                    value={lastName}\n                    validators={[\"required\"]}\n                    errorMessages={[\"this field is required\"]}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n\n              <TextValidator\n                className=\"mb-20\"\n                variant=\"outlined\"\n                label=\"Company\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"company\"\n                value={company}\n                fullWidth\n              />\n\n              <Grid container spacing={3} className=\"mb-8\">\n                <Grid item xs={6}>\n                  <TextValidator\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    onChange={this.handleChange}\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    validators={[\"required\", \"isEmail\"]}\n                    errorMessages={[\n                      \"this field is required\",\n                      \"email is not valid\"\n                    ]}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextValidator\n                    variant=\"outlined\"\n                    label=\"Mobile\"\n                    onChange={this.handleChange}\n                    type=\"number\"\n                    name=\"mobile\"\n                    value={mobile}\n                    validators={[\"required\"]}\n                    errorMessages={[\"this field is required\"]}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={3} className=\"mb-8\">\n                <Grid item xs={6}>\n                  <TextValidator\n                    label=\"Country\"\n                    select\n                    name=\"country\"\n                    variant=\"outlined\"\n                    value={country}\n                    onChange={this.handleChange}\n                    fullWidth\n                  >\n                    {countries.map(country => (\n                      <MenuItem key={country.code} value={country.name}>\n                        {country.name}\n                      </MenuItem>\n                    ))}\n                  </TextValidator>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextValidator\n                    variant=\"outlined\"\n                    label=\"City\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    name=\"city\"\n                    value={city}\n                    validators={[\"required\"]}\n                    errorMessages={[\"this field is required\"]}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n\n              <TextValidator\n                variant=\"outlined\"\n                className=\"mb-20\"\n                label=\"Address\\\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"address\"\n                value={address}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n                fullWidth\n              />\n\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Create an account?\"\n              />\n            </Grid>\n            <Grid item lg={5} md={5} sm={12} xs={12}>\n              <div className=\"flex flex-space-between mb-16\">\n                <h6 className=\"m-0\">Porduct</h6>\n                <h6 className=\"m-0\">Total Price</h6>\n              </div>\n              <div className=\"checkout__product-list\">\n                {cartList.map(product => (\n                  <Fragment key={product.id}>\n                    <div className=\"flex flex-space-between py-16\">\n                      <span className=\"text-muted pr-8\">{product.title}</span>\n                      <span className=\"text-muted\">\n                        ${product.price * product.amount}\n                      </span>\n                    </div>\n                    <Divider></Divider>\n                  </Fragment>\n                ))}\n                <div className=\"flex flex-space-between mb-32 mt-16\">\n                  <h6 className=\"m-0\">Total</h6>\n                  <h6 className=\"m-0\">${this.getTotalCost().toFixed(2)}</h6>\n                </div>\n                <Button\n                  className=\"w-100\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                >\n                  Place Order\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n        </ValidatorForm>\n\n        <PaymentDialog\n          open={this.state.open}\n          toggleDialog={this.toggleDialog}\n        ></PaymentDialog>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartList: state.ecommerce.cartList,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Checkout);\n"]},"metadata":{},"sourceType":"module"}