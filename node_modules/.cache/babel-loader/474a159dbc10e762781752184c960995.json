{"ast":null,"code":"import _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/charts/react-vis/ContourSeries.jsx\";\nimport React, { Component } from \"react\";\nimport { FlexibleWidthXYPlot, XAxis, YAxis, ContourSeries, MarkSeriesCanvas, Borders } from \"react-vis\";\nimport { ContourData } from \"./ContourData.js\";\n\nvar ContourSeriesChart = /*#__PURE__*/function (_Component) {\n  _inherits(ContourSeriesChart, _Component);\n\n  var _super = _createSuper(ContourSeriesChart);\n\n  function ContourSeriesChart() {\n    var _this;\n\n    _classCallCheck(this, ContourSeriesChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: ContourData\n    };\n    return _this;\n  }\n\n  _createClass(ContourSeriesChart, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return /*#__PURE__*/React.createElement(FlexibleWidthXYPlot, {\n        xDomain: [40, 100],\n        yDomain: [1.5, 8],\n        getX: function getX(d) {\n          return d.waiting;\n        },\n        getY: function getY(d) {\n          return d.eruptions;\n        },\n        height: 300,\n        width: 700,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ContourSeries, {\n        animation: true,\n        className: \"contour-series-example\",\n        style: {\n          stroke: \"#125C77\",\n          strokeLinejoin: \"round\"\n        },\n        colorRange: [\"#79C7E3\", \"#FF9833\"],\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(MarkSeriesCanvas, {\n        animation: true,\n        data: data,\n        size: 1,\n        color: \"#125C77\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Borders, {\n        style: {\n          all: {\n            fill: \"#fff\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(XAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ContourSeriesChart;\n}(Component);\n\nexport default ContourSeriesChart;","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/charts/react-vis/ContourSeries.jsx"],"names":["React","Component","FlexibleWidthXYPlot","XAxis","YAxis","ContourSeries","MarkSeriesCanvas","Borders","ContourData","ContourSeriesChart","state","data","d","waiting","eruptions","stroke","strokeLinejoin","all","fill"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SACEC,mBADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,aAJF,EAKEC,gBALF,EAMEC,OANF,QAOO,WAPP;AASA,SAASC,WAAT,QAA4B,kBAA5B;;IAEMC,kB;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAEH;AADA,K;;;;;;WAGR,kBAAS;AACP,UAAMG,IAAN,GAAe,KAAKD,KAApB,CAAMC,IAAN;AACA,0BACE,oBAAC,mBAAD;AACE,QAAA,OAAO,EAAE,CAAC,EAAD,EAAK,GAAL,CADX;AAEE,QAAA,OAAO,EAAE,CAAC,GAAD,EAAM,CAAN,CAFX;AAGE,QAAA,IAAI,EAAE,cAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,OAAN;AAAA,SAHT;AAIE,QAAA,IAAI,EAAE,cAAAD,CAAC;AAAA,iBAAIA,CAAC,CAACE,SAAN;AAAA,SAJT;AAKE,QAAA,MAAM,EAAE,GALV;AAME,QAAA,KAAK,EAAE,GANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQE,oBAAC,aAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,wBAFZ;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,SADH;AAELC,UAAAA,cAAc,EAAE;AAFX,SAHT;AAOE,QAAA,UAAU,EAAE,CAAC,SAAD,EAAY,SAAZ,CAPd;AAQE,QAAA,IAAI,EAAEL,IARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,eAkBE,oBAAC,gBAAD;AAAkB,QAAA,SAAS,MAA3B;AAA4B,QAAA,IAAI,EAAEA,IAAlC;AAAwC,QAAA,IAAI,EAAE,CAA9C;AAAiD,QAAA,KAAK,EAAE,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,eAmBE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEM,UAAAA,GAAG,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR;AAAP,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,eAoBE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,eAqBE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CADF;AAyBD;;;;EA/B8BjB,S;;AAkCjC,eAAeQ,kBAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport {\n  FlexibleWidthXYPlot,\n  XAxis,\n  YAxis,\n  ContourSeries,\n  MarkSeriesCanvas,\n  Borders\n} from \"react-vis\";\n\nimport { ContourData } from \"./ContourData.js\";\n\nclass ContourSeriesChart extends Component {\n  state = {\n    data: ContourData\n  };\n  render() {\n    let { data } = this.state;\n    return (\n      <FlexibleWidthXYPlot\n        xDomain={[40, 100]}\n        yDomain={[1.5, 8]}\n        getX={d => d.waiting}\n        getY={d => d.eruptions}\n        height={300}\n        width={700}\n      >\n        <ContourSeries\n          animation\n          className=\"contour-series-example\"\n          style={{\n            stroke: \"#125C77\",\n            strokeLinejoin: \"round\"\n          }}\n          colorRange={[\"#79C7E3\", \"#FF9833\"]}\n          data={data}\n        />\n        <MarkSeriesCanvas animation data={data} size={1} color={\"#125C77\"} />\n        <Borders style={{ all: { fill: \"#fff\" } }} />\n        <XAxis />\n        <YAxis />\n      </FlexibleWidthXYPlot>\n    );\n  }\n}\n\nexport default ContourSeriesChart;\n"]},"metadata":{},"sourceType":"module"}