{"ast":null,"code":"import _toConsumableArray from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/CRUD/CrudTable.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, Button, Card } from \"@material-ui/core\";\nimport { getAllUser, deleteUser } from \"./TableService\";\nimport MemberEditorDialog from \"./MemberEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\n\nvar CrudTable = /*#__PURE__*/function (_Component) {\n  _inherits(CrudTable, _Component);\n\n  var _super = _createSuper(CrudTable);\n\n  function CrudTable() {\n    var _this;\n\n    _classCallCheck(this, CrudTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      userList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page: page\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleDeleteUser = function (user) {\n      _this.setState({\n        user: user,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleConfirmationResponse = function () {\n      deleteUser(_this.state.user).then(function () {\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.updatePageData = function () {\n      getAllUser().then(function (_ref) {\n        var data = _ref.data;\n        return _this.setState({\n          userList: _toConsumableArray(data)\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CrudTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          userList = _this$state.userList,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: \"CRUD Table\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.setState({\n            shouldOpenEditorDialog: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"Add New Member\"), /*#__PURE__*/React.createElement(Card, {\n        className: \"w-100 overflow-auto\",\n        elevation: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"crud-table\",\n        style: {\n          whiteSpace: \"pre\",\n          minWidth: \"750px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, \"Age\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, \"Balance\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"Company\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, userList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (user, index) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          key: shortid.generate(),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          className: \"px-0\",\n          align: \"left\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }\n        }, user.name), /*#__PURE__*/React.createElement(TableCell, {\n          className: \"px-0\",\n          align: \"left\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }\n        }, user.age), /*#__PURE__*/React.createElement(TableCell, {\n          className: \"px-0\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }\n        }, \"$\", user.balance), /*#__PURE__*/React.createElement(TableCell, {\n          className: \"px-0\",\n          align: \"left\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }\n        }, user.company), /*#__PURE__*/React.createElement(TableCell, {\n          className: \"px-0\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }\n        }, user.isActive ? /*#__PURE__*/React.createElement(\"small\", {\n          className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        }, \"active\") : /*#__PURE__*/React.createElement(\"small\", {\n          className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }\n        }, \"inactive\")), /*#__PURE__*/React.createElement(TableCell, {\n          className: \"px-0 border-none\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          onClick: function onClick() {\n            return _this2.setState({\n              uid: user.id,\n              shouldOpenEditorDialog: true\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          color: \"primary\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }\n        }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n          onClick: function onClick() {\n            return _this2.handleDeleteUser(user);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          color: \"error\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        }, \"delete\"))));\n      }))), /*#__PURE__*/React.createElement(TablePagination, {\n        className: \"px-16\",\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: userList.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }), shouldOpenEditorDialog && /*#__PURE__*/React.createElement(MemberEditorDialog, {\n        handleClose: this.handleDialogClose,\n        open: shouldOpenEditorDialog,\n        uid: this.state.uid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: \"Are you sure to delete?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return CrudTable;\n}(Component);\n\nexport default CrudTable;","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/CRUD/CrudTable.jsx"],"names":["React","Component","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","Button","Card","getAllUser","deleteUser","MemberEditorDialog","Breadcrumb","ConfirmationDialog","shortid","CrudTable","state","rowsPerPage","page","userList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","setPage","setState","setRowsPerPage","event","target","value","handleChangePage","newPage","handleDialogClose","updatePageData","handleDeleteUser","user","handleConfirmationResponse","then","data","name","whiteSpace","minWidth","slice","map","index","generate","age","balance","company","isActive","uid","id","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination,\n  Button,\n  Card\n} from \"@material-ui/core\";\nimport { getAllUser, deleteUser } from \"./TableService\";\nimport MemberEditorDialog from \"./MemberEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\n\nclass CrudTable extends Component {\n  state = {\n    rowsPerPage: 10,\n    page: 0,\n    userList: [],\n    shouldOpenEditorDialog: false,\n    shouldOpenConfirmationDialog: false\n  };\n\n  setPage = page => {\n    this.setState({ page });\n  };\n\n  setRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    });\n    this.updatePageData();\n  };\n\n  handleDeleteUser = user => {\n    this.setState({\n      user,\n      shouldOpenConfirmationDialog: true\n    });\n  };\n\n  handleConfirmationResponse = () => {\n    deleteUser(this.state.user).then(() => {\n      this.handleDialogClose();\n    });\n  };\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  updatePageData = () => {\n    getAllUser().then(({ data }) => this.setState({ userList: [...data] }));\n  };\n\n  render() {\n    let {\n      rowsPerPage,\n      page,\n      userList,\n      shouldOpenConfirmationDialog,\n      shouldOpenEditorDialog\n    } = this.state;\n    return (\n      <div className=\"m-sm-30\">\n        <div  className=\"mb-sm-30\">\n          <Breadcrumb routeSegments={[{ name: \"CRUD Table\" }]} />\n        </div>\n\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n        >\n          Add New Member\n        </Button>\n        <Card className=\"w-100 overflow-auto\" elevation={6}>\n          <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", minWidth: \"750px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Age</TableCell>\n                <TableCell>Balance</TableCell>\n                <TableCell>Company</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {userList\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((user, index) => (\n                  <TableRow key={shortid.generate()}>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.name}\n                    </TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.age}\n                    </TableCell>\n                    <TableCell className=\"px-0\">${user.balance}</TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.company}\n                    </TableCell>\n                    <TableCell className=\"px-0\">\n                      {user.isActive ? (\n                        <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\n                          active\n                        </small>\n                      ) : (\n                        <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\n                          inactive\n                        </small>\n                      )}\n                    </TableCell>\n                    <TableCell className=\"px-0 border-none\">\n                      <IconButton\n                        onClick={() =>\n                          this.setState({\n                            uid: user.id,\n                            shouldOpenEditorDialog: true\n                          })\n                        }\n                      >\n                        <Icon color=\"primary\">edit</Icon>\n                      </IconButton>\n                      <IconButton onClick={() => this.handleDeleteUser(user)}>\n                        <Icon color=\"error\">delete</Icon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n\n          <TablePagination\n            className=\"px-16\"\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.setRowsPerPage}\n          />\n\n          {shouldOpenEditorDialog && (\n            <MemberEditorDialog\n              handleClose={this.handleDialogClose}\n              open={shouldOpenEditorDialog}\n              uid={this.state.uid}\n            />\n          )}\n          {shouldOpenConfirmationDialog && (\n            <ConfirmationDialog\n              open={shouldOpenConfirmationDialog}\n              onConfirmDialogClose={this.handleDialogClose}\n              onYesClick={this.handleConfirmationResponse}\n              text=\"Are you sure to delete?\"\n            />\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default CrudTable;\n"]},"metadata":{},"sourceType":"module"}