{"ast":null,"code":"import _objectWithoutProperties from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/calendar/EgretCalendar.jsx\";\nvar _excluded = [\"action\"];\nimport React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { Calendar, Views, momentLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport CalendarHeader from \"./CalendarHeader\";\nimport * as ReactDOM from \"react-dom\";\nimport { Breadcrumb } from \"egret\";\nimport { getAllEvents, updateEvent } from \"./CalendarService\";\nimport EventEditorDialog from \"./EventEditorDialog\";\nvar localizer = momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(Calendar);\nvar viewList = Object.keys(Views).map(function (key) {\n  return Views[key];\n});\n\nvar EgretCalendar = /*#__PURE__*/function (_Component) {\n  _inherits(EgretCalendar, _Component);\n\n  var _super = _createSuper(EgretCalendar);\n\n  function EgretCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, EgretCalendar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      events: [],\n      shouldShowEventDialog: false,\n      newEvent: null\n    };\n\n    _this.updateCalendar = function () {\n      getAllEvents().then(function (res) {\n        return res.data;\n      }).then(function (events) {\n        _this.setState({\n          events: events\n        });\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldShowEventDialog: false\n      });\n\n      _this.updateCalendar();\n    };\n\n    _this.handleEventMove = function (event) {\n      _this.handleEventResize(event);\n    };\n\n    _this.handleEventResize = function (event) {\n      updateEvent(event).then(function () {\n        _this.updateCalendar();\n      });\n    };\n\n    _this.openNewEventDialog = function (_ref) {\n      var action = _ref.action,\n          event = _objectWithoutProperties(_ref, _excluded);\n\n      if (action === \"doubleClick\") {\n        _this.setState({\n          newEvent: event,\n          shouldShowEventDialog: true\n        });\n      }\n    };\n\n    _this.openExistingEventDialog = function (event) {\n      _this.setState({\n        newEvent: event,\n        shouldShowEventDialog: true\n      });\n    };\n\n    _this.headerComponentRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(EgretCalendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateCalendar();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          events = _this$state.events,\n          newEvent = _this$state.newEvent,\n          shouldShowEventDialog = _this$state.shouldShowEventDialog;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: \"Calendar\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.openNewEventDialog({\n            action: \"doubleClick\",\n            start: new Date(),\n            end: new Date()\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"Add Event\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"h-700 flex-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.headerComponentRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(DragAndDropCalendar, {\n        selectable: true,\n        localizer: localizer,\n        events: events,\n        onEventDrop: this.handleEventMove,\n        resizable: true,\n        onEventResize: this.handleEventResize,\n        defaultView: Views.MONTH,\n        defaultDate: new Date(),\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        views: viewList,\n        step: 60,\n        showMultiDayTimes: true,\n        components: {\n          toolbar: function toolbar(props) {\n            return _this2.headerComponentRef.current ? ReactDOM.createPortal( /*#__PURE__*/React.createElement(CalendarHeader, Object.assign({}, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }\n            })), _this2.headerComponentRef.current) : /*#__PURE__*/React.createElement(\"div\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }\n            }, \"Header component not found\");\n          }\n        } // onNavigate={this.handleNavigate}\n        ,\n        onSelectEvent: function onSelectEvent(event) {\n          _this2.openExistingEventDialog(event);\n        },\n        onSelectSlot: function onSelectSlot(slotDetails) {\n          return _this2.openNewEventDialog(slotDetails);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      })), shouldShowEventDialog && /*#__PURE__*/React.createElement(EventEditorDialog, {\n        handleClose: this.handleDialogClose,\n        open: shouldShowEventDialog,\n        event: newEvent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return EgretCalendar;\n}(Component);\n\nexport default EgretCalendar;","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/calendar/EgretCalendar.jsx"],"names":["React","Component","Button","Calendar","Views","momentLocalizer","withDragAndDrop","moment","CalendarHeader","ReactDOM","Breadcrumb","getAllEvents","updateEvent","EventEditorDialog","localizer","DragAndDropCalendar","viewList","Object","keys","map","key","EgretCalendar","props","state","events","shouldShowEventDialog","newEvent","updateCalendar","then","res","data","setState","handleDialogClose","handleEventMove","event","handleEventResize","openNewEventDialog","action","openExistingEventDialog","headerComponentRef","createRef","name","start","Date","end","MONTH","toolbar","current","createPortal","slotDetails"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { Calendar, Views, momentLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport CalendarHeader from \"./CalendarHeader\";\nimport * as ReactDOM from \"react-dom\";\nimport { Breadcrumb } from \"egret\";\nimport { getAllEvents, updateEvent } from \"./CalendarService\";\nimport EventEditorDialog from \"./EventEditorDialog\";\n\nconst localizer = momentLocalizer(moment);\n\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nlet viewList = Object.keys(Views).map(key => Views[key]);\n\nclass EgretCalendar extends Component {\n  state = {\n    events: [],\n    shouldShowEventDialog: false,\n    newEvent: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.headerComponentRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.updateCalendar();\n  }\n\n  updateCalendar = () => {\n    getAllEvents()\n      .then(res => res.data)\n      .then(events => {\n        this.setState({ events });\n      });\n  };\n\n  handleDialogClose = () => {\n    this.setState({ shouldShowEventDialog: false });\n    this.updateCalendar();\n  };\n\n  handleEventMove = event => {\n    this.handleEventResize(event);\n  };\n\n  handleEventResize = event => {\n    updateEvent(event).then(() => {\n      this.updateCalendar();\n    });\n  };\n\n  openNewEventDialog = ({ action, ...event }) => {\n    if (action === \"doubleClick\") {\n      this.setState({\n        newEvent: event,\n        shouldShowEventDialog: true\n      });\n    }\n  };\n\n  openExistingEventDialog = event => {\n    this.setState({\n      newEvent: event,\n      shouldShowEventDialog: true\n    });\n  };\n\n  render() {\n    let { events, newEvent, shouldShowEventDialog } = this.state;\n    return (\n      <div className=\"m-sm-30\">\n        <div  className=\"mb-sm-30\">\n          <Breadcrumb routeSegments={[{ name: \"Calendar\" }]} />\n        </div>\n\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            this.openNewEventDialog({\n              action: \"doubleClick\",\n              start: new Date(),\n              end: new Date()\n            })\n          }\n        >\n          Add Event\n        </Button>\n        <div className=\"h-700 flex-column\">\n          <div ref={this.headerComponentRef} />\n          <DragAndDropCalendar\n            selectable\n            localizer={localizer}\n            events={events}\n            onEventDrop={this.handleEventMove}\n            resizable\n            onEventResize={this.handleEventResize}\n            defaultView={Views.MONTH}\n            defaultDate={new Date()}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            views={viewList}\n            step={60}\n            showMultiDayTimes\n            components={{\n              toolbar: props => {\n                return this.headerComponentRef.current ? (\n                  ReactDOM.createPortal(\n                    <CalendarHeader {...props} />,\n                    this.headerComponentRef.current\n                  )\n                ) : (\n                  <div>Header component not found</div>\n                );\n              }\n            }}\n            // onNavigate={this.handleNavigate}\n            onSelectEvent={event => {\n              this.openExistingEventDialog(event);\n            }}\n            onSelectSlot={slotDetails => this.openNewEventDialog(slotDetails)}\n          />\n        </div>\n        {shouldShowEventDialog && (\n          <EventEditorDialog\n            handleClose={this.handleDialogClose}\n            open={shouldShowEventDialog}\n            event={newEvent}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EgretCalendar;\n"]},"metadata":{},"sourceType":"module"}