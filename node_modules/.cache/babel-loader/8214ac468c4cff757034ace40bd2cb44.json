{"ast":null,"code":"import _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/charts/react-vis/VisLineChart.jsx\";\nimport React, { Component } from \"react\";\nimport { curveCatmullRom } from \"d3-shape\";\nimport { XAxis, YAxis, HorizontalGridLines, VerticalGridLines, ChartLabel, LineSeries, LineSeriesCanvas, FlexibleWidthXYPlot } from \"react-vis\";\nimport { withStyles } from \"@material-ui/styles\";\n\nvar VisLineChart = /*#__PURE__*/function (_Component) {\n  _inherits(VisLineChart, _Component);\n\n  var _super = _createSuper(VisLineChart);\n\n  function VisLineChart() {\n    var _this;\n\n    _classCallCheck(this, VisLineChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      useCanvas: false\n    };\n    return _this;\n  }\n\n  _createClass(VisLineChart, [{\n    key: \"render\",\n    value: function render() {\n      var useCanvas = this.state.useCanvas;\n      var theme = this.props.theme;\n      var Line = useCanvas ? LineSeriesCanvas : LineSeries;\n      return /*#__PURE__*/React.createElement(FlexibleWidthXYPlot, {\n        height: 320,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(HorizontalGridLines, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(VerticalGridLines, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(XAxis, {\n        style: {\n          text: {\n            stroke: \"none\",\n            fill: theme.palette.text.secondary,\n            fontWeight: 600\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        style: {\n          text: {\n            stroke: \"none\",\n            fill: theme.palette.text.secondary,\n            fontWeight: 600\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ChartLabel, {\n        text: \"X Axis\",\n        className: \"alt-x-label\",\n        includeMargin: false,\n        xPercent: 0.025,\n        yPercent: 1.01,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ChartLabel, {\n        text: \"Y Axis\",\n        className: \"alt-y-label\",\n        includeMargin: false,\n        xPercent: 0.06,\n        yPercent: 0.06,\n        style: {\n          transform: \"rotate(-90)\",\n          textAnchor: \"end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        className: \"first-series\",\n        data: [{\n          x: 1,\n          y: 3\n        }, {\n          x: 2,\n          y: 5\n        }, {\n          x: 3,\n          y: 15\n        }, {\n          x: 4,\n          y: 12\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        className: \"second-series\",\n        data: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        className: \"third-series\",\n        curve: \"curveMonotoneX\",\n        data: [{\n          x: 1,\n          y: 10\n        }, {\n          x: 2,\n          y: 4\n        }, {\n          x: 3,\n          y: 2\n        }, {\n          x: 4,\n          y: 15\n        }],\n        strokeDasharray: useCanvas ? [7, 3] : \"7, 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        className: \"fourth-series\",\n        curve: curveCatmullRom.alpha(0.5),\n        style: {\n          // note that this can not be translated to the canvas version\n          strokeDasharray: \"2 2\"\n        },\n        data: [{\n          x: 1,\n          y: 7\n        }, {\n          x: 2,\n          y: 11\n        }, {\n          x: 3,\n          y: 9\n        }, {\n          x: 4,\n          y: 2\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return VisLineChart;\n}(Component);\n\nexport default withStyles({}, {\n  withTheme: true\n})(VisLineChart);","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/charts/react-vis/VisLineChart.jsx"],"names":["React","Component","curveCatmullRom","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","ChartLabel","LineSeries","LineSeriesCanvas","FlexibleWidthXYPlot","withStyles","VisLineChart","state","useCanvas","theme","props","Line","text","stroke","fill","palette","secondary","fontWeight","transform","textAnchor","x","y","alpha","strokeDasharray","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { curveCatmullRom } from \"d3-shape\";\n\nimport {\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  VerticalGridLines,\n  ChartLabel,\n  LineSeries,\n  LineSeriesCanvas,\n  FlexibleWidthXYPlot\n} from \"react-vis\";\n\nimport { withStyles } from \"@material-ui/styles\";\n\nclass VisLineChart extends Component {\n  state = {\n    useCanvas: false\n  };\n  render() {\n    const { useCanvas } = this.state;\n    let { theme } = this.props;\n    const Line = useCanvas ? LineSeriesCanvas : LineSeries;\n\n    return (\n      <FlexibleWidthXYPlot height={320}>\n        <HorizontalGridLines />\n        <VerticalGridLines />\n        <XAxis\n          style={{\n            text: {\n              stroke: \"none\",\n              fill: theme.palette.text.secondary,\n              fontWeight: 600\n            }\n          }}\n        />\n        <YAxis\n          style={{\n            text: {\n              stroke: \"none\",\n              fill: theme.palette.text.secondary,\n              fontWeight: 600\n            }\n          }}\n        />\n        <ChartLabel\n          text=\"X Axis\"\n          className=\"alt-x-label\"\n          includeMargin={false}\n          xPercent={0.025}\n          yPercent={1.01}\n        />\n\n        <ChartLabel\n          text=\"Y Axis\"\n          className=\"alt-y-label\"\n          includeMargin={false}\n          xPercent={0.06}\n          yPercent={0.06}\n          style={{\n            transform: \"rotate(-90)\",\n            textAnchor: \"end\"\n          }}\n        />\n        <Line\n          className=\"first-series\"\n          data={[\n            { x: 1, y: 3 },\n            { x: 2, y: 5 },\n            { x: 3, y: 15 },\n            { x: 4, y: 12 }\n          ]}\n        />\n        <Line className=\"second-series\" data={null} />\n        <Line\n          className=\"third-series\"\n          curve={\"curveMonotoneX\"}\n          data={[\n            { x: 1, y: 10 },\n            { x: 2, y: 4 },\n            { x: 3, y: 2 },\n            { x: 4, y: 15 }\n          ]}\n          strokeDasharray={useCanvas ? [7, 3] : \"7, 3\"}\n        />\n        <Line\n          className=\"fourth-series\"\n          curve={curveCatmullRom.alpha(0.5)}\n          style={{\n            // note that this can not be translated to the canvas version\n            strokeDasharray: \"2 2\"\n          }}\n          data={[\n            { x: 1, y: 7 },\n            { x: 2, y: 11 },\n            { x: 3, y: 9 },\n            { x: 4, y: 2 }\n          ]}\n        />\n      </FlexibleWidthXYPlot>\n    );\n  }\n}\n\nexport default withStyles({}, { withTheme: true })(VisLineChart);\n"]},"metadata":{},"sourceType":"module"}