{"ast":null,"code":"import _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/scrum-board/AppScrumBoard.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Grid, Button, ClickAwayListener, TextField, InputAdornment, IconButton, Icon } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getAllBoard, addNewBoard } from \"../../redux/actions/ScrumBoardActions\";\n\nvar AppScrumBoard = /*#__PURE__*/function (_Component) {\n  _inherits(AppScrumBoard, _Component);\n\n  var _super = _createSuper(AppScrumBoard);\n\n  function AppScrumBoard() {\n    var _this;\n\n    _classCallCheck(this, AppScrumBoard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      shouldOpenDialog: false,\n      textFieldValue: \"\",\n      boardList: []\n    };\n\n    _this.openEditorDialog = function (value) {\n      _this.setState({\n        shouldOpenDialog: value\n      });\n    };\n\n    _this.handleChange = function (event) {\n      if (event.key === \"Enter\" && !event.shiftKey) {\n        _this.handleAddNewBoard();\n      } else _this.setState({\n        textFieldValue: event.target.value\n      });\n    };\n\n    _this.handleAddNewBoard = function () {\n      var title = _this.state.textFieldValue.trim();\n\n      if (title !== \"\") {\n        _this.props.addNewBoard(title);\n\n        _this.setState({\n          textFieldValue: \"\"\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AppScrumBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllBoard();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          shouldOpenDialog = _this$state.shouldOpenDialog,\n          textFieldValue = _this$state.textFieldValue;\n      var _this$props$boardList = this.props.boardList,\n          boardList = _this$props$boardList === void 0 ? [] : _this$props$boardList;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"scrum-board m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, boardList.map(function (board) {\n        return /*#__PURE__*/React.createElement(Grid, {\n          key: board.id,\n          item: true,\n          lg: 3,\n          md: 3,\n          sm: 12,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/scrum-board/\".concat(board.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          className: \"p-24 cursor-pointer h-150\",\n          elevation: 3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"white-space-pre-line capitalize m-0 font-weight-500\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }\n        }, board.title))));\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, shouldOpenDialog ? /*#__PURE__*/React.createElement(ClickAwayListener, {\n        onClickAway: function onClickAway() {\n          return _this2.openEditorDialog(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"p-24 pb-16 h-150\",\n        elevation: 3,\n        style: {\n          width: \"290px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        onChange: this.handleChange,\n        onKeyDown: this.handleChange,\n        className: \"mb-12\",\n        variant: \"outlined\",\n        label: \"Board Title\",\n        value: textFieldValue,\n        autoFocus: true,\n        fullWidth: true,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            size: \"small\",\n            onClick: function onClick() {\n              return _this2.openEditorDialog(false);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            fontSize: \"small\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }\n          }, \"clear\")))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleAddNewBoard,\n        variant: \"contained\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, \"Add\")))) : /*#__PURE__*/React.createElement(Card, {\n        onClick: function onClick() {\n          return _this2.openEditorDialog(true);\n        },\n        className: \"p-24 flex flex-middle flex-center cursor-pointer h-150\",\n        elevation: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-primary text-center font-weight-500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"m-0 text-primary font-weight-normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, \"Create New Board\"))))));\n    }\n  }]);\n\n  return AppScrumBoard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    getAllBoard: PropTypes.func.isRequired,\n    addNewBoard: PropTypes.func.isRequired,\n    boardList: state.scrumboard.boardList\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllBoard: getAllBoard,\n  addNewBoard: addNewBoard\n})(AppScrumBoard);","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/scrum-board/AppScrumBoard.jsx"],"names":["React","Component","Card","Grid","Button","ClickAwayListener","TextField","InputAdornment","IconButton","Icon","Link","PropTypes","connect","getAllBoard","addNewBoard","AppScrumBoard","state","shouldOpenDialog","textFieldValue","boardList","openEditorDialog","value","setState","handleChange","event","key","shiftKey","handleAddNewBoard","target","title","trim","props","map","board","id","width","endAdornment","mapStateToProps","func","isRequired","scrumboard"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  Grid,\n  Button,\n  ClickAwayListener,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Icon\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getAllBoard,\n  addNewBoard\n} from \"../../redux/actions/ScrumBoardActions\";\n\nclass AppScrumBoard extends Component {\n  state = {\n    shouldOpenDialog: false,\n    textFieldValue: \"\",\n    boardList: []\n  };\n\n  componentDidMount() {\n    this.props.getAllBoard();\n  }\n\n  openEditorDialog = value => {\n    this.setState({ shouldOpenDialog: value });\n  };\n\n  handleChange = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      this.handleAddNewBoard();\n    } else this.setState({ textFieldValue: event.target.value });\n  };\n\n  handleAddNewBoard = () => {\n    let title = this.state.textFieldValue.trim();\n    if (title !== \"\") {\n      this.props.addNewBoard(title);\n      this.setState({ textFieldValue: \"\" });\n    }\n  };\n\n  render() {\n    let { shouldOpenDialog, textFieldValue } = this.state;\n    let { boardList = [] } = this.props;\n\n    return (\n      <div className=\"scrum-board m-sm-30\">\n        <Grid container spacing={2}>\n          {boardList.map(board => (\n            <Grid key={board.id} item lg={3} md={3} sm={12} xs={12}>\n              <Link to={`/scrum-board/${board.id}`}>\n                <Card className=\"p-24 cursor-pointer h-150\" elevation={3}>\n                  <h5 className=\"white-space-pre-line capitalize m-0 font-weight-500\">\n                    {board.title}\n                  </h5>\n                </Card>\n              </Link>\n            </Grid>\n          ))}\n          <Grid item lg={3} md={3} sm={12} xs={12}>\n            {shouldOpenDialog ? (\n              <ClickAwayListener\n                onClickAway={() => this.openEditorDialog(false)}\n              >\n                <Card\n                  className=\"p-24 pb-16 h-150\"\n                  elevation={3}\n                  style={{ width: \"290px\" }}\n                >\n                  <TextField\n                    onChange={this.handleChange}\n                    onKeyDown={this.handleChange}\n                    className=\"mb-12\"\n                    variant=\"outlined\"\n                    label=\"Board Title\"\n                    value={textFieldValue}\n                    autoFocus\n                    fullWidth\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => this.openEditorDialog(false)}\n                          >\n                            <Icon fontSize=\"small\">clear</Icon>\n                          </IconButton>\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                  <div className=\"flex flex-end\">\n                    <Button\n                      onClick={this.handleAddNewBoard}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Add\n                    </Button>\n                  </div>\n                </Card>\n              </ClickAwayListener>\n            ) : (\n              <Card\n                onClick={() => this.openEditorDialog(true)}\n                className=\"p-24 flex flex-middle flex-center cursor-pointer h-150\"\n                elevation={3}\n              >\n                <div className=\"text-primary text-center font-weight-500\">\n                  <h1 className=\"m-0 text-primary font-weight-normal\">+</h1>\n                  <div>Create New Board</div>\n                </div>\n              </Card>\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  getAllBoard: PropTypes.func.isRequired,\n  addNewBoard: PropTypes.func.isRequired,\n  boardList: state.scrumboard.boardList\n});\n\nexport default connect(\n  mapStateToProps,\n  { getAllBoard, addNewBoard }\n)(AppScrumBoard);\n"]},"metadata":{},"sourceType":"module"}