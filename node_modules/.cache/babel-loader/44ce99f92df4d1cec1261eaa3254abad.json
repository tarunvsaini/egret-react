{"ast":null,"code":"import _toConsumableArray from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/inbox/AppInbox.jsx\";\nimport React, { Component } from \"react\";\nimport { EgretSidenavContainer, EgretSidenav, EgretSidenavContent } from \"egret\";\nimport InboxMessageList from \"./InboxMessagList\";\nimport { isMobile } from \"utils\";\nimport InboxSidenav from \"./InboxSidenav\";\nimport InboxTopBar from \"./InboxTopbar\";\nimport { getAllMessage } from \"./InboxService\";\n\nvar AppInbox = /*#__PURE__*/function (_Component) {\n  _inherits(AppInbox, _Component);\n\n  var _super = _createSuper(AppInbox);\n\n  function AppInbox() {\n    var _this;\n\n    _classCallCheck(this, AppInbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.container = React.createRef();\n    _this.state = {\n      shouldOpenSidenav: true,\n      masterCheckbox: false,\n      messageList: []\n    };\n\n    _this.toggleSidenav = function () {\n      _this.setState({\n        shouldOpenSidenav: !_this.state.shouldOpenSidenav\n      });\n    };\n\n    _this.handleMasterCheckbox = function (event) {\n      var temp = _this.state.messageList;\n      var isChecked = event.target.checked;\n\n      if (isChecked) {\n        temp.map(function (message) {\n          message.selected = true;\n          return message;\n        });\n\n        _this.setState({\n          messageList: _toConsumableArray(temp),\n          masterCheckbox: event.target.checked\n        });\n      } else {\n        temp.map(function (message) {\n          message.selected = false;\n          return message;\n        });\n\n        _this.setState({\n          messageList: _toConsumableArray(temp),\n          masterCheckbox: event.target.checked\n        });\n      }\n    };\n\n    _this.handleCheckboxSelection = function (event, index) {\n      event.persist();\n      var temp = _this.state.messageList;\n      temp[index].selected = event.target.checked;\n\n      _this.setState({\n        messageList: _toConsumableArray(temp)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AppInbox, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      if (isMobile()) this.setState({\n        shouldOpenSidenav: false\n      });\n      if (window) this.windowResizeListener = window.addEventListener(\"resize\", function (e) {\n        if (isMobile()) _this2.setState({\n          shouldOpenSidenav: false\n        });else _this2.setState({\n          shouldOpenSidenav: true\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      getAllMessage().then(function (data) {\n        _this3.setState({\n          messageList: data.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var masterCheckbox = this.state.masterCheckbox;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inbox flex m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inbox__sidenav w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(EgretSidenavContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EgretSidenav, {\n        width: \"220px\",\n        toggleSidenav: this.toggleSidenav,\n        open: this.state.shouldOpenSidenav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InboxSidenav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(EgretSidenavContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InboxTopBar, {\n        masterCheckbox: masterCheckbox,\n        handleMasterCheckbox: this.handleMasterCheckbox,\n        toggleSidenav: this.toggleSidenav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(InboxMessageList, {\n        handleCheckboxSelection: this.handleCheckboxSelection,\n        messageList: this.state.messageList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return AppInbox;\n}(Component);\n\nexport default AppInbox;","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/inbox/AppInbox.jsx"],"names":["React","Component","EgretSidenavContainer","EgretSidenav","EgretSidenavContent","InboxMessageList","isMobile","InboxSidenav","InboxTopBar","getAllMessage","AppInbox","container","createRef","state","shouldOpenSidenav","masterCheckbox","messageList","toggleSidenav","setState","handleMasterCheckbox","event","temp","isChecked","target","checked","map","message","selected","handleCheckboxSelection","index","persist","window","windowResizeListener","addEventListener","e","removeEventListener","then","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,qBADF,EAEEC,YAFF,EAGEC,mBAHF,QAIO,OAJP;AAKA,OAAOC,gBAAP,MAA6B,mBAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,gBAA9B;;IAEMC,Q;;;;;;;;;;;;;;;UACJC,S,GAAYX,KAAK,CAACY,SAAN,E;UAEZC,K,GAAQ;AACNC,MAAAA,iBAAiB,EAAE,IADb;AAENC,MAAAA,cAAc,EAAE,KAFV;AAGNC,MAAAA,WAAW,EAAE;AAHP,K;;UAMRC,a,GAAgB,YAAM;AACpB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,iBAAiB,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAAjC,OAAd;AACD,K;;UAEDK,oB,GAAuB,UAAAC,KAAK,EAAI;AAC9B,UAAIC,IAAI,GAAG,MAAKR,KAAL,CAAWG,WAAtB;AACA,UAAIM,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,OAA7B;;AACA,UAAIF,SAAJ,EAAe;AACbD,QAAAA,IAAI,CAACI,GAAL,CAAS,UAAAC,OAAO,EAAI;AAClBA,UAAAA,OAAO,CAACC,QAAR,GAAmB,IAAnB;AACA,iBAAOD,OAAP;AACD,SAHD;;AAIA,cAAKR,QAAL,CAAc;AACZF,UAAAA,WAAW,qBAAMK,IAAN,CADC;AAEZN,UAAAA,cAAc,EAAEK,KAAK,CAACG,MAAN,CAAaC;AAFjB,SAAd;AAID,OATD,MASO;AACLH,QAAAA,IAAI,CAACI,GAAL,CAAS,UAAAC,OAAO,EAAI;AAClBA,UAAAA,OAAO,CAACC,QAAR,GAAmB,KAAnB;AACA,iBAAOD,OAAP;AACD,SAHD;;AAIA,cAAKR,QAAL,CAAc;AACZF,UAAAA,WAAW,qBAAMK,IAAN,CADC;AAEZN,UAAAA,cAAc,EAAEK,KAAK,CAACG,MAAN,CAAaC;AAFjB,SAAd;AAID;AACF,K;;UAEDI,uB,GAA0B,UAACR,KAAD,EAAQS,KAAR,EAAkB;AAC1CT,MAAAA,KAAK,CAACU,OAAN;AACA,UAAIT,IAAI,GAAG,MAAKR,KAAL,CAAWG,WAAtB;AACAK,MAAAA,IAAI,CAACQ,KAAD,CAAJ,CAAYF,QAAZ,GAAuBP,KAAK,CAACG,MAAN,CAAaC,OAApC;;AACA,YAAKN,QAAL,CAAc;AACZF,QAAAA,WAAW,qBAAMK,IAAN;AADC,OAAd;AAGD,K;;;;;;;WAED,8BAAqB;AAAA;;AACnB,UAAIf,QAAQ,EAAZ,EAAgB,KAAKY,QAAL,CAAc;AAAEJ,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AAChB,UAAIiB,MAAJ,EACE,KAAKC,oBAAL,GAA4BD,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkC,UAAAC,CAAC,EAAI;AACjE,YAAI5B,QAAQ,EAAZ,EAAgB,MAAI,CAACY,QAAL,CAAc;AAAEJ,UAAAA,iBAAiB,EAAE;AAArB,SAAd,EAAhB,KACK,MAAI,CAACI,QAAL,CAAc;AAAEJ,UAAAA,iBAAiB,EAAE;AAArB,SAAd;AACN,OAH2B,CAA5B;AAIH;;;WAED,gCAAuB;AACrB,UAAIiB,MAAJ,EAAYA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKH,oBAA1C;AACb;;;WAED,6BAAoB;AAAA;;AAClBvB,MAAAA,aAAa,GAAG2B,IAAhB,CAAqB,UAAAC,IAAI,EAAI;AAC3B,QAAA,MAAI,CAACnB,QAAL,CAAc;AACZF,UAAAA,WAAW,EAAEqB,IAAI,CAACA;AADN,SAAd;AAGD,OAJD;AAKD;;;WAED,kBAAS;AACP,UAAMtB,cAAN,GAAyB,KAAKF,KAA9B,CAAME,cAAN;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,aAAa,EAAE,KAAKE,aAFtB;AAGE,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,iBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,eAQE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AACE,QAAA,cAAc,EAAEC,cADlB;AAEE,QAAA,oBAAoB,EAAE,KAAKI,oBAF7B;AAGE,QAAA,aAAa,EAAE,KAAKF,aAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAME,oBAAC,gBAAD;AACE,QAAA,uBAAuB,EAAE,KAAKW,uBADhC;AAEE,QAAA,WAAW,EAAE,KAAKf,KAAL,CAAWG,WAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CARF,CADF,CADF,CADF;AA0BD;;;;EA/FoBf,S;;AAkGvB,eAAeS,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  EgretSidenavContainer,\n  EgretSidenav,\n  EgretSidenavContent\n} from \"egret\";\nimport InboxMessageList from \"./InboxMessagList\";\nimport { isMobile } from \"utils\";\nimport InboxSidenav from \"./InboxSidenav\";\nimport InboxTopBar from \"./InboxTopbar\";\nimport { getAllMessage } from \"./InboxService\";\n\nclass AppInbox extends Component {\n  container = React.createRef();\n  windowResizeListener;\n  state = {\n    shouldOpenSidenav: true,\n    masterCheckbox: false,\n    messageList: []\n  };\n\n  toggleSidenav = () => {\n    this.setState({ shouldOpenSidenav: !this.state.shouldOpenSidenav });\n  };\n\n  handleMasterCheckbox = event => {\n    let temp = this.state.messageList;\n    let isChecked = event.target.checked;\n    if (isChecked) {\n      temp.map(message => {\n        message.selected = true;\n        return message;\n      });\n      this.setState({\n        messageList: [...temp],\n        masterCheckbox: event.target.checked\n      });\n    } else {\n      temp.map(message => {\n        message.selected = false;\n        return message;\n      });\n      this.setState({\n        messageList: [...temp],\n        masterCheckbox: event.target.checked\n      });\n    }\n  };\n\n  handleCheckboxSelection = (event, index) => {\n    event.persist();\n    let temp = this.state.messageList;\n    temp[index].selected = event.target.checked;\n    this.setState({\n      messageList: [...temp]\n    });\n  };\n\n  componentWillMount() {\n    if (isMobile()) this.setState({ shouldOpenSidenav: false });\n    if (window)\n      this.windowResizeListener = window.addEventListener(\"resize\", e => {\n        if (isMobile()) this.setState({ shouldOpenSidenav: false });\n        else this.setState({ shouldOpenSidenav: true });\n      });\n  }\n\n  componentWillUnmount() {\n    if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n\n  componentDidMount() {\n    getAllMessage().then(data => {\n      this.setState({\n        messageList: data.data\n      });\n    });\n  }\n\n  render() {\n    let { masterCheckbox } = this.state;\n    return (\n      <div className=\"inbox flex m-sm-30\">\n        <div className=\"inbox__sidenav w-100\">\n          <EgretSidenavContainer>\n            <EgretSidenav\n              width=\"220px\"\n              toggleSidenav={this.toggleSidenav}\n              open={this.state.shouldOpenSidenav}\n            >\n              <InboxSidenav />\n            </EgretSidenav>\n            <EgretSidenavContent>\n              <InboxTopBar\n                masterCheckbox={masterCheckbox}\n                handleMasterCheckbox={this.handleMasterCheckbox}\n                toggleSidenav={this.toggleSidenav}\n              />\n              <InboxMessageList\n                handleCheckboxSelection={this.handleCheckboxSelection}\n                messageList={this.state.messageList}\n              />\n            </EgretSidenavContent>\n          </EgretSidenavContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppInbox;\n"]},"metadata":{},"sourceType":"module"}