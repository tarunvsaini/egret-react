{"ast":null,"code":"import _defineProperty from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/EgretLayout/Layout1/Layout1.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withStyles } from \"@material-ui/core\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { isMdScreen, classList } from \"utils\";\nimport { renderRoutes } from \"react-router-config\";\nimport Layout1Topbar from \"./Layout1Topbar\";\nimport Layout1Sidenav from \"./Layout1Sidenav\";\nimport Footer from \"../SharedCompoents/Footer\";\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\nimport AppContext from \"app/appContext\"; // import {EgretLoadable} from \"egret\";\n// const SecondarySidebar = EgretLoadable({\n//   loader: () => import(\"../SharedCompoents/SecondarySidebar\")\n// });\n// const Footer = EgretLoadable({\n//   loader: () => import(\"../SharedCompoents/Footer\")\n// });\n// const Layout1Topbar = EgretLoadable({\n//   loader: () => import(\"./Layout1Topbar\")\n// });\n// const Layout1Sidenav = EgretLoadable({\n//   loader: () => import(\"./Layout1Sidenav\")\n// });\n\nvar styles = function styles(theme) {\n  return {\n    layout: {\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n\nvar Layout1 = /*#__PURE__*/function (_Component) {\n  _inherits(Layout1, _Component);\n\n  var _super = _createSuper(Layout1);\n\n  function Layout1() {\n    var _this;\n\n    _classCallCheck(this, Layout1);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.updateSidebarMode = function (sidebarSettings) {\n      var _this$props = _this.props,\n          settings = _this$props.settings,\n          setLayoutSettings = _this$props.setLayoutSettings;\n      setLayoutSettings(_objectSpread(_objectSpread({}, settings), {}, {\n        layout1Settings: _objectSpread(_objectSpread({}, settings.layout1Settings), {}, {\n          leftSidebar: _objectSpread(_objectSpread({}, settings.layout1Settings.leftSidebar), sidebarSettings)\n        })\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(Layout1, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (isMdScreen()) {\n        this.updateSidebarMode({\n          mode: \"close\"\n        });\n      } // if (window) {\n      //   // SET DIRECTION\n      //   let { settings } = this.props;\n      //   document.body.setAttribute(\"dir\", settings.direction);\n      // }\n\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {// if (window) {\n      //   document.body.removeAttribute(\"dir\");\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _layoutClasses,\n          _this2 = this;\n\n      var _this$props2 = this.props,\n          settings = _this$props2.settings,\n          classes = _this$props2.classes,\n          theme = _this$props2.theme;\n      var layout1Settings = settings.layout1Settings;\n      var layoutClasses = (_layoutClasses = {}, _defineProperty(_layoutClasses, classes.layout, true), _defineProperty(_layoutClasses, \"\".concat(settings.activeLayout, \" sidenav-\").concat(layout1Settings.leftSidebar.mode, \" theme-\").concat(theme.palette.type, \" flex\"), true), _defineProperty(_layoutClasses, \"topbar-fixed\", layout1Settings.topbar.fixed), _layoutClasses);\n      return /*#__PURE__*/React.createElement(AppContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, function (_ref) {\n        var routes = _ref.routes;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classList(layoutClasses),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }\n        }, layout1Settings.leftSidebar.show && /*#__PURE__*/React.createElement(Layout1Sidenav, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 50\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"content-wrap position-relative\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        }, layout1Settings.topbar.show && layout1Settings.topbar.fixed && /*#__PURE__*/React.createElement(Layout1Topbar, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }\n        }), settings.perfectScrollbar && /*#__PURE__*/React.createElement(Scrollbar, {\n          className: \"scrollable-content\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }\n        }, layout1Settings.topbar.show && !layout1Settings.topbar.fixed && /*#__PURE__*/React.createElement(Layout1Topbar, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 54\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"content\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }\n        }, renderRoutes(routes)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"my-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }\n        }), settings.footer.show && !settings.footer.fixed && /*#__PURE__*/React.createElement(Footer, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 70\n          }\n        })), !settings.perfectScrollbar && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"scrollable-content\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }\n        }, layout1Settings.topbar.show && !layout1Settings.topbar.fixed && /*#__PURE__*/React.createElement(Layout1Topbar, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 54\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"content\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }\n        }, renderRoutes(routes)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"my-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }\n        }), settings.footer.show && !settings.footer.fixed && /*#__PURE__*/React.createElement(Footer, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 70\n          }\n        })), settings.footer.show && settings.footer.fixed && /*#__PURE__*/React.createElement(Footer, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 65\n          }\n        })), settings.secondarySidebar.show && /*#__PURE__*/React.createElement(SecondarySidebar, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 48\n          }\n        }));\n      });\n    }\n  }]);\n\n  return Layout1;\n}(Component);\n\nLayout1.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    setLayoutSettings: PropTypes.func.isRequired,\n    settings: state.layout.settings\n  };\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, {\n  setLayoutSettings: setLayoutSettings\n})(Layout1));","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/EgretLayout/Layout1/Layout1.jsx"],"names":["React","Component","connect","PropTypes","setLayoutSettings","withStyles","Scrollbar","isMdScreen","classList","renderRoutes","Layout1Topbar","Layout1Sidenav","Footer","SecondarySidebar","AppContext","styles","theme","layout","backgroundColor","palette","background","default","Layout1","updateSidebarMode","sidebarSettings","props","settings","layout1Settings","leftSidebar","mode","classes","layoutClasses","activeLayout","type","topbar","fixed","routes","show","perfectScrollbar","footer","secondarySidebar","propTypes","object","isRequired","mapStateToProps","state","func","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withStyles } from \"@material-ui/core\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { isMdScreen, classList } from \"utils\";\nimport { renderRoutes } from \"react-router-config\";\nimport Layout1Topbar from \"./Layout1Topbar\";\nimport Layout1Sidenav from \"./Layout1Sidenav\";\nimport Footer from \"../SharedCompoents/Footer\";\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\nimport AppContext from \"app/appContext\";\n// import {EgretLoadable} from \"egret\";\n\n// const SecondarySidebar = EgretLoadable({\n//   loader: () => import(\"../SharedCompoents/SecondarySidebar\")\n// });\n\n// const Footer = EgretLoadable({\n//   loader: () => import(\"../SharedCompoents/Footer\")\n// });\n\n// const Layout1Topbar = EgretLoadable({\n//   loader: () => import(\"./Layout1Topbar\")\n// });\n\n// const Layout1Sidenav = EgretLoadable({\n//   loader: () => import(\"./Layout1Sidenav\")\n// });\n\nconst styles = theme => {\n  return {\n    layout: {\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n\nclass Layout1 extends Component {\n  componentWillMount() {\n    if (isMdScreen()) {\n      this.updateSidebarMode({ mode: \"close\" });\n    }\n    // if (window) {\n    //   // SET DIRECTION\n    //   let { settings } = this.props;\n    //   document.body.setAttribute(\"dir\", settings.direction);\n    // }\n  }\n\n  componentWillUnmount() {\n    // if (window) {\n    //   document.body.removeAttribute(\"dir\");\n    // }\n  }\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n    setLayoutSettings({\n      ...settings,\n      layout1Settings: {\n        ...settings.layout1Settings,\n        leftSidebar: {\n          ...settings.layout1Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  render() {\n    let { settings, classes, theme } = this.props;\n\n    let { layout1Settings } = settings;\n    let layoutClasses = {\n      [classes.layout]: true,\n      [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\n      \"topbar-fixed\": layout1Settings.topbar.fixed\n    };\n    return (\n      <AppContext.Consumer>\n        {({ routes }) => (\n          <div className={classList(layoutClasses)}>\n            {layout1Settings.leftSidebar.show && <Layout1Sidenav />}\n\n            <div className=\"content-wrap position-relative\">\n              {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n                <Layout1Topbar />\n              )}\n\n              {settings.perfectScrollbar && (\n                <Scrollbar className=\"scrollable-content\">\n                  {layout1Settings.topbar.show &&\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\n                  <div className=\"content\">{renderRoutes(routes)}</div>\n                  <div className=\"my-auto\" />\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\n                </Scrollbar>\n              )}\n\n              {!settings.perfectScrollbar && (\n                <div className=\"scrollable-content\">\n                  {layout1Settings.topbar.show &&\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\n                  <div className=\"content\">{renderRoutes(routes)}</div>\n                  <div className=\"my-auto\" />\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\n                </div>\n              )}\n\n              {settings.footer.show && settings.footer.fixed && <Footer />}\n            </div>\n            {settings.secondarySidebar.show && <SecondarySidebar />}\n          </div>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n\nLayout1.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { setLayoutSettings }\n  )(Layout1)\n);\n"]},"metadata":{},"sourceType":"module"}