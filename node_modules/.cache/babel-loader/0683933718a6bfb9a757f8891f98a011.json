{"ast":null,"code":"import _toConsumableArray from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/charts/victory-charts/RadarChart.jsx\";\nimport React from \"react\";\nimport { VictoryChart, VictoryTheme, VictoryArea, VictoryGroup, VictoryPolarAxis, VictoryLabel } from \"victory\";\nvar characterData = [{\n  strength: 1,\n  intelligence: 250,\n  luck: 1,\n  stealth: 40,\n  charisma: 50\n}, {\n  strength: 2,\n  intelligence: 300,\n  luck: 2,\n  stealth: 80,\n  charisma: 90\n}, {\n  strength: 5,\n  intelligence: 225,\n  luck: 3,\n  stealth: 60,\n  charisma: 120\n}];\n\nvar RadarChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(RadarChart, _React$Component);\n\n  var _super = _createSuper(RadarChart);\n\n  function RadarChart(props) {\n    var _this;\n\n    _classCallCheck(this, RadarChart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: _this.processData(characterData),\n      maxima: _this.getMaxima(characterData)\n    };\n    return _this;\n  }\n\n  _createClass(RadarChart, [{\n    key: \"getMaxima\",\n    value: function getMaxima(data) {\n      var groupedData = Object.keys(data[0]).reduce(function (memo, key) {\n        memo[key] = data.map(function (d) {\n          return d[key];\n        });\n        return memo;\n      }, {});\n      return Object.keys(groupedData).reduce(function (memo, key) {\n        memo[key] = Math.max.apply(Math, _toConsumableArray(groupedData[key]));\n        return memo;\n      }, {});\n    }\n  }, {\n    key: \"processData\",\n    value: function processData(data) {\n      var maxByGroup = this.getMaxima(data);\n\n      var makeDataArray = function makeDataArray(d) {\n        return Object.keys(d).map(function (key) {\n          return {\n            x: key,\n            y: d[key] / maxByGroup[key]\n          };\n        });\n      };\n\n      return data.map(function (datum) {\n        return makeDataArray(datum);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"h-320\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(VictoryChart, {\n        polar: true,\n        theme: VictoryTheme.material,\n        domain: {\n          y: [0, 1]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(VictoryGroup, {\n        colorScale: [\"gold\", \"orange\", \"tomato\"],\n        style: {\n          data: {\n            fillOpacity: 0.2,\n            strokeWidth: 2\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, this.state.data.map(function (data, i) {\n        return /*#__PURE__*/React.createElement(VictoryArea, {\n          key: i,\n          data: data,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 22\n          }\n        });\n      })), Object.keys(this.state.maxima).map(function (key, i) {\n        return /*#__PURE__*/React.createElement(VictoryPolarAxis, {\n          key: i,\n          dependentAxis: true,\n          style: {\n            axisLabel: {\n              padding: 10\n            },\n            axis: {\n              stroke: \"none\"\n            },\n            grid: {\n              stroke: \"grey\",\n              strokeWidth: 0.25,\n              opacity: 0.5\n            }\n          },\n          tickLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n            labelPlacement: \"vertical\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }\n          }),\n          labelPlacement: \"perpendicular\",\n          axisValue: i + 1,\n          label: key,\n          tickFormat: function tickFormat(t) {\n            return Math.ceil(t * _this2.state.maxima[key]);\n          },\n          tickValues: [0.25, 0.5, 0.75],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        });\n      }), /*#__PURE__*/React.createElement(VictoryPolarAxis, {\n        labelPlacement: \"parallel\",\n        tickFormat: function tickFormat() {\n          return \"\";\n        },\n        style: {\n          axis: {\n            stroke: \"none\"\n          },\n          grid: {\n            stroke: \"grey\",\n            opacity: 0.5\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return RadarChart;\n}(React.Component);\n\nexport default RadarChart;","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/charts/victory-charts/RadarChart.jsx"],"names":["React","VictoryChart","VictoryTheme","VictoryArea","VictoryGroup","VictoryPolarAxis","VictoryLabel","characterData","strength","intelligence","luck","stealth","charisma","RadarChart","props","state","data","processData","maxima","getMaxima","groupedData","Object","keys","reduce","memo","key","map","d","Math","max","maxByGroup","makeDataArray","x","y","datum","material","fillOpacity","strokeWidth","i","axisLabel","padding","axis","stroke","grid","opacity","t","ceil","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  VictoryChart,\n  VictoryTheme,\n  VictoryArea,\n  VictoryGroup,\n  VictoryPolarAxis,\n  VictoryLabel\n} from \"victory\";\n\nconst characterData = [\n  { strength: 1, intelligence: 250, luck: 1, stealth: 40, charisma: 50 },\n  { strength: 2, intelligence: 300, luck: 2, stealth: 80, charisma: 90 },\n  { strength: 5, intelligence: 225, luck: 3, stealth: 60, charisma: 120 }\n];\n\nclass RadarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.processData(characterData),\n      maxima: this.getMaxima(characterData)\n    };\n  }\n\n  getMaxima(data) {\n    const groupedData = Object.keys(data[0]).reduce((memo, key) => {\n      memo[key] = data.map(d => d[key]);\n      return memo;\n    }, {});\n    return Object.keys(groupedData).reduce((memo, key) => {\n      memo[key] = Math.max(...groupedData[key]);\n      return memo;\n    }, {});\n  }\n\n  processData(data) {\n    const maxByGroup = this.getMaxima(data);\n    const makeDataArray = d => {\n      return Object.keys(d).map(key => {\n        return { x: key, y: d[key] / maxByGroup[key] };\n      });\n    };\n    return data.map(datum => makeDataArray(datum));\n  }\n\n  render() {\n    return (\n      <div className=\"h-320\">\n        <VictoryChart\n          polar\n          theme={VictoryTheme.material}\n          domain={{ y: [0, 1] }}\n        >\n          <VictoryGroup\n            colorScale={[\"gold\", \"orange\", \"tomato\"]}\n            style={{ data: { fillOpacity: 0.2, strokeWidth: 2 } }}\n          >\n            {this.state.data.map((data, i) => {\n              return <VictoryArea key={i} data={data} />;\n            })}\n          </VictoryGroup>\n          {Object.keys(this.state.maxima).map((key, i) => {\n            return (\n              <VictoryPolarAxis\n                key={i}\n                dependentAxis\n                style={{\n                  axisLabel: { padding: 10 },\n                  axis: { stroke: \"none\" },\n                  grid: { stroke: \"grey\", strokeWidth: 0.25, opacity: 0.5 }\n                }}\n                tickLabelComponent={<VictoryLabel labelPlacement=\"vertical\" />}\n                labelPlacement=\"perpendicular\"\n                axisValue={i + 1}\n                label={key}\n                tickFormat={t => Math.ceil(t * this.state.maxima[key])}\n                tickValues={[0.25, 0.5, 0.75]}\n              />\n            );\n          })}\n          <VictoryPolarAxis\n            labelPlacement=\"parallel\"\n            tickFormat={() => \"\"}\n            style={{\n              axis: { stroke: \"none\" },\n              grid: { stroke: \"grey\", opacity: 0.5 }\n            }}\n          />\n        </VictoryChart>\n      </div>\n    );\n  }\n}\n\nexport default RadarChart;\n"]},"metadata":{},"sourceType":"module"}