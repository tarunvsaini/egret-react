{"ast":null,"code":"import _objectSpread from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/scrum-board/BoardList.jsx\";\nimport React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Card, Icon, MenuItem, IconButton, TextField, InputAdornment, ClickAwayListener, Button } from \"@material-ui/core\";\nimport ScrumBoardCard from \"./ScrumBoardCard\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { EgretMenu } from \"egret\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { renameListInBoard, deleteListFromBoard, addNewCardInList } from \"../../redux/actions/ScrumBoardActions\";\n\nvar BoardList = /*#__PURE__*/function (_Component) {\n  _inherits(BoardList, _Component);\n\n  var _super = _createSuper(BoardList);\n\n  function BoardList() {\n    var _this;\n\n    _classCallCheck(this, BoardList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      shouldOpenTitleEditor: false,\n      shouldOpenAddCard: false,\n      cardTitleText: \"\",\n      columnTitleText: \"\"\n    };\n\n    _this.handleChange = function (event) {\n      if (event.key === \"Enter\" && !event.shiftKey) {\n        if (event.target.name === \"cardTitleText\") {\n          _this.handleAddNewCard();\n        } else {\n          _this.handleRenameList();\n        }\n      } else _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleRenameList = function () {\n      _this.props.renameListInBoard({\n        boardId: _this.props.board.id,\n        listId: _this.props.data.column.id,\n        listTitle: _this.state.columnTitleText\n      });\n\n      _this.openTitleEditor(false);\n    };\n\n    _this.openTitleEditor = function (value) {\n      _this.setState({\n        shouldOpenTitleEditor: value\n      });\n    };\n\n    _this.openAddCard = function (value) {\n      _this.setState({\n        shouldOpenAddCard: value\n      });\n    };\n\n    _this.handleAddNewCard = function () {\n      var cardTitleText = _this.state.cardTitleText;\n\n      if (cardTitleText.trim() !== \"\") {\n        _this.props.addNewCardInList({\n          boardId: _this.props.board.id,\n          listId: _this.props.data.column.id,\n          cardTitle: _this.state.cardTitleText\n        });\n\n        _this.setState({\n          cardTitleText: \"\"\n        });\n      }\n    };\n\n    _this.handleListDelete = function () {\n      _this.props.deleteListFromBoard({\n        boardId: _this.props.board.id,\n        listId: _this.props.data.column.id\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BoardList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$data = this.props.data,\n          provided = _this$props$data.provided,\n          snapshot = _this$props$data.snapshot,\n          column = _this$props$data.column;\n      var _this$state = this.state,\n          shouldOpenAddCard = _this$state.shouldOpenAddCard,\n          shouldOpenTitleEditor = _this$state.shouldOpenTitleEditor,\n          cardTitleText = _this$state.cardTitleText;\n      var handleCardClick = this.props.handleCardClick;\n      return /*#__PURE__*/React.createElement(Card, Object.assign({\n        className: \"list-column position-relative pt-4\",\n        elevation: snapshot.isDragging ? 10 : 3,\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        style: _objectSpread({\n          minWidth: \"290px\",\n          maxWidth: \"290px\"\n        }, provided.draggableProps.style),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: column.id,\n        direction: \"vertical\",\n        type: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          ref: provided.innerRef,\n          className: \"position-relative px-16\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flex flex-middle flex-space-between py-8\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }\n        }, shouldOpenTitleEditor ? /*#__PURE__*/React.createElement(ClickAwayListener, {\n          onClickAway: function onClickAway() {\n            return _this2.openTitleEditor(false);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(TextField, {\n          variant: \"outlined\",\n          defaultValue: column.title,\n          onChange: _this2.handleChange,\n          onKeyDown: _this2.handleChange,\n          name: \"columnTitleText\",\n          InputProps: {\n            endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n              position: \"end\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 27\n              }\n            }, /*#__PURE__*/React.createElement(IconButton, {\n              size: \"small\",\n              onClick: _this2.handleRenameList,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Icon, {\n              fontSize: \"small\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 31\n              }\n            }, \"done\")))\n          },\n          inputProps: {\n            style: {\n              padding: \"10px\"\n            }\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }\n        })) : /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"m-0 flex-grow-1 py-4 capitalize\",\n          onClick: function onClick() {\n            return _this2.openTitleEditor(true);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }\n        }, column.title), /*#__PURE__*/React.createElement(EgretMenu, {\n          horizontalPosition: \"right\",\n          menuButton: /*#__PURE__*/React.createElement(IconButton, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 23\n            }\n          }, \"more_vert\")),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(MenuItem, {\n          className: \"flex flex-middle\",\n          style: {\n            minWidth: 150\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }\n        }, \" settings \"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"pl-16\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }\n        }, \" Settings \")), /*#__PURE__*/React.createElement(MenuItem, {\n          onClick: _this2.handleListDelete,\n          className: \"flex flex-middle\",\n          style: {\n            minWidth: 150\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }\n        }, \" delete \"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"pl-16\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }\n        }, \" Delete \")))), /*#__PURE__*/React.createElement(Scrollbar, {\n          className: \"position-relative\",\n          style: {\n            height: \"380px\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }\n        }, column.cardList.map(function (card, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: card.id,\n            draggableId: card.id,\n            index: index,\n            type: \"card\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(Card, Object.assign({\n              className: \"list-column__card borderborder-radius-4 bg-light-gray\",\n              elevation: snapshot.isDragging ? 10 : 3,\n              onClick: function onClick() {\n                return handleCardClick(_objectSpread(_objectSpread({}, card), {}, {\n                  listId: column.id\n                }));\n              },\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              style: _objectSpread({}, provided.draggableProps.style),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(ScrumBoardCard, {\n              card: card,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 25\n              }\n            }));\n          });\n        })), provided.placeholder);\n      }), shouldOpenAddCard ? /*#__PURE__*/React.createElement(ClickAwayListener, {\n        onClickAway: function onClickAway() {\n          return _this2.openAddCard(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"position-bottom border-radius-0 cursor-pointer px-16 pt-16 pb-8 w-100\",\n        elevation: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        className: \"mb-12\",\n        variant: \"outlined\",\n        name: \"cardTitleText\",\n        value: cardTitleText,\n        fullWidth: true,\n        onChange: this.handleChange,\n        onKeyDown: this.handleChange,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            size: \"small\",\n            onClick: function onClick() {\n              return _this2.openAddCard(false);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            fontSize: \"small\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 25\n            }\n          }, \"clear\")))\n        },\n        inputProps: {\n          style: {\n            padding: \"10px\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleAddNewCard,\n        variant: \"contained\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, \"Add\")))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"font-weight-500 flex-grow-1 border-radius-0\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.openAddCard(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }, \"+ Add Card\")));\n    }\n  }]);\n\n  return BoardList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    renameListInBoard: PropTypes.func.isRequired,\n    deleteListFromBoard: PropTypes.func.isRequired,\n    addNewCardInList: PropTypes.func.isRequired,\n    board: state.scrumboard.board\n  };\n};\n\nexport default connect(mapStateToProps, {\n  renameListInBoard: renameListInBoard,\n  deleteListFromBoard: deleteListFromBoard,\n  addNewCardInList: addNewCardInList\n})(BoardList);","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/scrum-board/BoardList.jsx"],"names":["React","Component","Droppable","Draggable","Card","Icon","MenuItem","IconButton","TextField","InputAdornment","ClickAwayListener","Button","ScrumBoardCard","Scrollbar","EgretMenu","connect","PropTypes","renameListInBoard","deleteListFromBoard","addNewCardInList","BoardList","state","shouldOpenTitleEditor","shouldOpenAddCard","cardTitleText","columnTitleText","handleChange","event","key","shiftKey","target","name","handleAddNewCard","handleRenameList","setState","value","props","boardId","board","id","listId","data","column","listTitle","openTitleEditor","openAddCard","trim","cardTitle","handleListDelete","provided","snapshot","handleCardClick","isDragging","innerRef","draggableProps","dragHandleProps","minWidth","maxWidth","style","title","endAdornment","padding","height","cardList","map","card","index","placeholder","mapStateToProps","func","isRequired","scrumboard"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport {\n  Card,\n  Icon,\n  MenuItem,\n  IconButton,\n  TextField,\n  InputAdornment,\n  ClickAwayListener,\n  Button\n} from \"@material-ui/core\";\nimport ScrumBoardCard from \"./ScrumBoardCard\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { EgretMenu } from \"egret\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport {\n  renameListInBoard,\n  deleteListFromBoard,\n  addNewCardInList\n} from \"../../redux/actions/ScrumBoardActions\";\n\nclass BoardList extends Component {\n  state = {\n    shouldOpenTitleEditor: false,\n    shouldOpenAddCard: false,\n    cardTitleText: \"\",\n    columnTitleText: \"\"\n  };\n\n  handleChange = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      if (event.target.name === \"cardTitleText\") {\n        this.handleAddNewCard();\n      } else {\n        this.handleRenameList();\n      }\n    } else this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleRenameList = () => {\n    this.props.renameListInBoard({\n      boardId: this.props.board.id,\n      listId: this.props.data.column.id,\n      listTitle: this.state.columnTitleText\n    });\n    this.openTitleEditor(false);\n  };\n\n  openTitleEditor = value => {\n    this.setState({ shouldOpenTitleEditor: value });\n  };\n\n  openAddCard = value => {\n    this.setState({ shouldOpenAddCard: value });\n  };\n\n  handleAddNewCard = () => {\n    let { cardTitleText } = this.state;\n    if (cardTitleText.trim() !== \"\") {\n      this.props.addNewCardInList({\n        boardId: this.props.board.id,\n        listId: this.props.data.column.id,\n        cardTitle: this.state.cardTitleText\n      });\n      this.setState({ cardTitleText: \"\" });\n    }\n  };\n\n  handleListDelete = () => {\n    this.props.deleteListFromBoard({\n      boardId: this.props.board.id,\n      listId: this.props.data.column.id\n    });\n  };\n\n  render() {\n    let { provided, snapshot, column } = this.props.data;\n    let {\n      shouldOpenAddCard,\n      shouldOpenTitleEditor,\n      cardTitleText\n    } = this.state;\n    let { handleCardClick } = this.props;\n\n    return (\n      <Card\n        className=\"list-column position-relative pt-4\"\n        elevation={snapshot.isDragging ? 10 : 3}\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        style={{\n          minWidth: \"290px\",\n          maxWidth: \"290px\",\n          ...provided.draggableProps.style\n        }}\n      >\n        <Droppable droppableId={column.id} direction=\"vertical\" type=\"card\">\n          {(provided, snapshot) => (\n            <div ref={provided.innerRef} className=\"position-relative px-16\">\n              <div className=\"flex flex-middle flex-space-between py-8\">\n                {shouldOpenTitleEditor ? (\n                  <ClickAwayListener\n                    onClickAway={() => this.openTitleEditor(false)}\n                  >\n                    <TextField\n                      variant=\"outlined\"\n                      defaultValue={column.title}\n                      onChange={this.handleChange}\n                      onKeyDown={this.handleChange}\n                      name=\"columnTitleText\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={this.handleRenameList}\n                            >\n                              <Icon fontSize=\"small\">done</Icon>\n                            </IconButton>\n                          </InputAdornment>\n                        )\n                      }}\n                      inputProps={{\n                        style: {\n                          padding: \"10px\"\n                        }\n                      }}\n                    />\n                  </ClickAwayListener>\n                ) : (\n                  <h4\n                    className=\"m-0 flex-grow-1 py-4 capitalize\"\n                    onClick={() => this.openTitleEditor(true)}\n                  >\n                    {column.title}\n                  </h4>\n                )}\n                <EgretMenu\n                  horizontalPosition=\"right\"\n                  menuButton={\n                    <IconButton>\n                      <Icon>more_vert</Icon>\n                    </IconButton>\n                  }\n                >\n                  <MenuItem\n                    className=\"flex flex-middle\"\n                    style={{ minWidth: 150 }}\n                  >\n                    <Icon> settings </Icon>\n                    <span className=\"pl-16\"> Settings </span>\n                  </MenuItem>\n                  <MenuItem\n                    onClick={this.handleListDelete}\n                    className=\"flex flex-middle\"\n                    style={{ minWidth: 150 }}\n                  >\n                    <Icon> delete </Icon>\n                    <span className=\"pl-16\"> Delete </span>\n                  </MenuItem>\n                </EgretMenu>\n              </div>\n\n              <Scrollbar\n                className=\"position-relative\"\n                style={{ height: \"380px\" }}\n              >\n                {column.cardList.map((card, index) => (\n                  <Draggable\n                    key={card.id}\n                    draggableId={card.id}\n                    index={index}\n                    type=\"card\"\n                  >\n                    {(provided, snapshot) => (\n                      <Card\n                        className=\"list-column__card borderborder-radius-4 bg-light-gray\"\n                        elevation={snapshot.isDragging ? 10 : 3}\n                        onClick={() =>\n                          handleCardClick({ ...card, listId: column.id })\n                        }\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          ...provided.draggableProps.style\n                        }}\n                      >\n                        <ScrumBoardCard card={card}></ScrumBoardCard>\n                      </Card>\n                    )}\n                  </Draggable>\n                ))}\n              </Scrollbar>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n\n        {/* ===================================================== */}\n        {shouldOpenAddCard ? (\n          <ClickAwayListener onClickAway={() => this.openAddCard(false)}>\n            <Card\n              className=\"position-bottom border-radius-0 cursor-pointer px-16 pt-16 pb-8 w-100\"\n              elevation={5}\n            >\n              <TextField\n                className=\"mb-12\"\n                variant=\"outlined\"\n                name=\"cardTitleText\"\n                value={cardTitleText}\n                fullWidth\n                onChange={this.handleChange}\n                onKeyDown={this.handleChange}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => this.openAddCard(false)}\n                      >\n                        <Icon fontSize=\"small\">clear</Icon>\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n                inputProps={{\n                  style: {\n                    padding: \"10px\"\n                  }\n                }}\n              />\n              <div className=\"flex flex-end\">\n                <Button\n                  onClick={this.handleAddNewCard}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Add\n                </Button>\n              </div>\n            </Card>\n          </ClickAwayListener>\n        ) : (\n          <div className=\"flex\">\n            <Button\n              className=\"font-weight-500 flex-grow-1 border-radius-0\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.openAddCard(true)}\n            >\n              + Add Card\n            </Button>\n          </div>\n        )}\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  renameListInBoard: PropTypes.func.isRequired,\n  deleteListFromBoard: PropTypes.func.isRequired,\n  addNewCardInList: PropTypes.func.isRequired,\n  board: state.scrumboard.board\n});\n\nexport default connect(\n  mapStateToProps,\n  { renameListInBoard, deleteListFromBoard, addNewCardInList }\n)(BoardList);\n"]},"metadata":{},"sourceType":"module"}