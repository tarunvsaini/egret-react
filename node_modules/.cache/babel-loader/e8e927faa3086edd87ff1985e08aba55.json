{"ast":null,"code":"import _objectSpread from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/forms/UploadForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport { Fab, Icon, Card, Grid, Divider, Button } from \"@material-ui/core\";\n\nvar UploadForm = /*#__PURE__*/function (_Component) {\n  _inherits(UploadForm, _Component);\n\n  var _super = _createSuper(UploadForm);\n\n  function UploadForm() {\n    var _this;\n\n    _classCallCheck(this, UploadForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dragClass: \"\",\n      files: [],\n      statusList: [],\n      queProgress: 0\n    };\n\n    _this.handleFileSelect = function (event) {\n      var files = event.target.files;\n      var list = [];\n\n      var _iterator = _createForOfIteratorHelper(files),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var iterator = _step.value;\n          list.push({\n            file: iterator,\n            uploading: false,\n            error: false,\n            progress: 0\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      _this.setState({\n        files: [].concat(list)\n      });\n    };\n\n    _this.handleDragOver = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    _this.handleDrop = function (event) {\n      event.preventDefault();\n      event.persist();\n      var files = event.dataTransfer.files;\n      var list = [];\n\n      var _iterator2 = _createForOfIteratorHelper(files),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var iterator = _step2.value;\n          list.push({\n            file: iterator,\n            uploading: false,\n            error: false,\n            progress: 0\n          });\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      _this.setState({\n        dragClass: \"\",\n        files: [].concat(list)\n      });\n\n      return false;\n    };\n\n    _this.handleDragStart = function (event) {\n      _this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    _this.handleSingleRemove = function (index) {\n      var files = _toConsumableArray(_this.state.files);\n\n      files.splice(index, 1);\n\n      _this.setState({\n        files: _toConsumableArray(files)\n      });\n    };\n\n    _this.handleAllRemove = function () {\n      _this.setState({\n        files: []\n      });\n    };\n\n    _this.uploadSingleFile = function (index) {\n      var allFiles = _toConsumableArray(_this.state.files);\n\n      var file = _this.state.files[index];\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: true,\n        error: false\n      });\n\n      _this.setState({\n        files: _toConsumableArray(allFiles)\n      });\n    };\n\n    _this.uploadAllFile = function () {\n      var allFiles = [];\n\n      _this.state.files.map(function (item) {\n        allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n          uploading: true,\n          error: false\n        }));\n        return item;\n      });\n\n      _this.setState({\n        files: [].concat(allFiles),\n        queProgress: 35\n      });\n    };\n\n    _this.handleSingleCancel = function (index) {\n      var allFiles = _toConsumableArray(_this.state.files);\n\n      var file = _this.state.files[index];\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: false,\n        error: true\n      });\n\n      _this.setState({\n        files: _toConsumableArray(allFiles)\n      });\n    };\n\n    _this.handleCancelAll = function () {\n      var allFiles = [];\n\n      _this.state.files.map(function (item) {\n        allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n          uploading: false,\n          error: true\n        }));\n        return item;\n      });\n\n      _this.setState({\n        files: [].concat(allFiles),\n        queProgress: 0\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          dragClass = _this$state.dragClass,\n          files = _this$state.files,\n          queProgress = _this$state.queProgress;\n      var isEmpty = files.length === 0;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"upload-form m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: \"Others\",\n          path: \"/\"\n        }, {\n          name: \"Upload\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(SimpleCard, {\n        title: \"File Upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-wrap mb-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"upload-single-file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        className: \"capitalize\",\n        color: \"primary\",\n        component: \"span\",\n        variant: \"extended\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"pr-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }\n      }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 19\n        }\n      }, \"Single File\")))), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"display-none\",\n        onChange: this.handleFileSelect,\n        id: \"upload-single-file\",\n        type: \"file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"px-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"upload-multiple-file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        className: \"capitalize\",\n        color: \"primary\",\n        component: \"span\",\n        variant: \"extended\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"pr-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 19\n        }\n      }, \"Multiple File\")))), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"display-none\",\n        onChange: this.handleFileSelect,\n        id: \"upload-multiple-file\",\n        type: \"file\",\n        multiple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(dragClass, \" upload-drop-box mb-24 flex flex-center flex-middle\"),\n        onDragEnter: this.handleDragStart,\n        onDragOver: this.handleDragOver,\n        onDrop: this.handleDrop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, isEmpty ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }, \"Drop your files here\") : /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }, files.length, \" file\", files.length > 1 ? \"s\" : \"\", \" selected...\")), /*#__PURE__*/React.createElement(Card, {\n        className: \"mb-24\",\n        elevation: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"center\",\n        alignItems: \"center\",\n        direction: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 1,\n        md: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, \"Size\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 2,\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, \"Progress\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 1,\n        md: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, \"Actions\"))), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }\n      }), isEmpty && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"px-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }\n      }, \"Que is empty\"), files.map(function (item, index) {\n        var file = item.file,\n            uploading = item.uploading,\n            error = item.error,\n            progress = item.progress;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"px-16 py-16\",\n          key: file.name,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          justify: \"center\",\n          alignItems: \"center\",\n          direction: \"row\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 4,\n          md: 4,\n          sm: 12,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }\n        }, file.name), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 1,\n          md: 1,\n          sm: 12,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 21\n          }\n        }, (file.size / 1024 / 1024).toFixed(1), \" MB\"), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 2,\n          md: 2,\n          sm: 12,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(EgretProgressBar, {\n          value: progress,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 1,\n          md: 1,\n          sm: 12,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 21\n          }\n        }, error && /*#__PURE__*/React.createElement(Icon, {\n          color: \"error\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 33\n          }\n        }, \"error\")), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 4,\n          md: 4,\n          sm: 12,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flex\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: uploading,\n          onClick: function onClick() {\n            return _this2.uploadSingleFile(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }\n        }, \"Upload\"), /*#__PURE__*/React.createElement(Button, {\n          className: \"mx-8\",\n          variant: \"contained\",\n          disabled: !uploading,\n          color: \"secondary\",\n          onClick: function onClick() {\n            return _this2.handleSingleCancel(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }\n        }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          className: \"bg-error\",\n          onClick: function onClick() {\n            return _this2.handleSingleRemove(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }\n        }, \"Remove\")))));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }, \"Queue progress:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"py-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EgretProgressBar, {\n        value: queProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: isEmpty,\n        onClick: this.uploadAllFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }\n      }, \"Upload All\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mx-8\",\n        variant: \"contained\",\n        color: \"secondary\",\n        disabled: isEmpty,\n        onClick: this.handleCancelAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }\n      }, \"Cancel All\"), !isEmpty && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"bg-error\",\n        onClick: this.handleAllRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }, \"Remove All\")))));\n    }\n  }]);\n\n  return UploadForm;\n}(Component);\n\nexport default UploadForm;","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/forms/UploadForm.jsx"],"names":["React","Component","Breadcrumb","SimpleCard","EgretProgressBar","Fab","Icon","Card","Grid","Divider","Button","UploadForm","state","dragClass","files","statusList","queProgress","handleFileSelect","event","target","list","iterator","push","file","uploading","error","progress","setState","handleDragOver","preventDefault","handleDrop","persist","dataTransfer","handleDragStart","handleSingleRemove","index","splice","handleAllRemove","uploadSingleFile","allFiles","uploadAllFile","map","item","handleSingleCancel","handleCancelAll","isEmpty","length","name","path","size","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport { Fab, Icon, Card, Grid, Divider, Button } from \"@material-ui/core\";\n\nclass UploadForm extends Component {\n  state = {\n    dragClass: \"\",\n    files: [],\n    statusList: [],\n    queProgress: 0\n  };\n\n  handleFileSelect = event => {\n    let files = event.target.files;\n    let list = [];\n\n    for (const iterator of files) {\n      list.push({\n        file: iterator,\n        uploading: false,\n        error: false,\n        progress: 0\n      });\n    }\n\n    this.setState({\n      files: [...list]\n    });\n  };\n\n  handleDragOver = event => {\n    event.preventDefault();\n    this.setState({ dragClass: \"drag-shadow\" });\n  };\n\n  handleDrop = event => {\n    event.preventDefault();\n    event.persist();\n\n    let files = event.dataTransfer.files;\n    let list = [];\n\n    for (const iterator of files) {\n      list.push({\n        file: iterator,\n        uploading: false,\n        error: false,\n        progress: 0\n      });\n    }\n\n    this.setState({\n      dragClass: \"\",\n      files: [...list]\n    });\n\n    return false;\n  };\n\n  handleDragStart = event => {\n    this.setState({ dragClass: \"drag-shadow\" });\n  };\n\n  handleSingleRemove = index => {\n    let files = [...this.state.files];\n    files.splice(index, 1);\n    this.setState({\n      files: [...files]\n    });\n  };\n\n  handleAllRemove = () => {\n    this.setState({ files: [] });\n  };\n\n  uploadSingleFile = index => {\n    let allFiles = [...this.state.files];\n    let file = this.state.files[index];\n\n    allFiles[index] = { ...file, uploading: true, error: false };\n\n    this.setState({\n      files: [...allFiles]\n    });\n  };\n\n  uploadAllFile = () => {\n    let allFiles = [];\n\n    this.state.files.map(item => {\n      allFiles.push({\n        ...item,\n        uploading: true,\n        error: false\n      });\n\n      return item;\n    });\n\n    this.setState({\n      files: [...allFiles],\n      queProgress: 35\n    });\n  };\n\n  handleSingleCancel = index => {\n    let allFiles = [...this.state.files];\n    let file = this.state.files[index];\n\n    allFiles[index] = { ...file, uploading: false, error: true };\n\n    this.setState({\n      files: [...allFiles]\n    });\n  };\n\n  handleCancelAll = () => {\n    let allFiles = [];\n\n    this.state.files.map(item => {\n      allFiles.push({\n        ...item,\n        uploading: false,\n        error: true\n      });\n\n      return item;\n    });\n\n    this.setState({\n      files: [...allFiles],\n      queProgress: 0\n    });\n  };\n\n  render() {\n    let { dragClass, files, queProgress } = this.state;\n    let isEmpty = files.length === 0;\n\n    return (\n      <div className=\"upload-form m-sm-30\">\n        <div className=\"mb-sm-30\">\n          <Breadcrumb\n            routeSegments={[{ name: \"Others\", path: \"/\" }, { name: \"Upload\" }]}\n          />\n        </div>\n        <SimpleCard title=\"File Upload\">\n          <div className=\"flex flex-wrap mb-24\">\n            <label htmlFor=\"upload-single-file\">\n              <Fab\n                className=\"capitalize\"\n                color=\"primary\"\n                component=\"span\"\n                variant=\"extended\"\n              >\n                <div className=\"flex flex-middle\">\n                  <Icon className=\"pr-8\">cloud_upload</Icon>\n                  <span>Single File</span>\n                </div>\n              </Fab>\n            </label>\n            <input\n              className=\"display-none\"\n              onChange={this.handleFileSelect}\n              id=\"upload-single-file\"\n              type=\"file\"\n            />\n            <div className=\"px-16\"></div>\n            <label htmlFor=\"upload-multiple-file\">\n              <Fab\n                className=\"capitalize\"\n                color=\"primary\"\n                component=\"span\"\n                variant=\"extended\"\n              >\n                <div className=\"flex flex-middle\">\n                  <Icon className=\"pr-8\">cloud_upload</Icon>\n                  <span>Multiple File</span>\n                </div>\n              </Fab>\n            </label>\n            <input\n              className=\"display-none\"\n              onChange={this.handleFileSelect}\n              id=\"upload-multiple-file\"\n              type=\"file\"\n              multiple\n            />\n          </div>\n\n          <div\n            className={`${dragClass} upload-drop-box mb-24 flex flex-center flex-middle`}\n            onDragEnter={this.handleDragStart}\n            onDragOver={this.handleDragOver}\n            onDrop={this.handleDrop}\n          >\n            {isEmpty ? (\n              <span>Drop your files here</span>\n            ) : (\n              <h5 className=\"m-0\">\n                {files.length} file{files.length > 1 ? \"s\" : \"\"} selected...\n              </h5>\n            )}\n          </div>\n\n          <Card className=\"mb-24\" elevation={2}>\n            <div className=\"p-16\">\n              <Grid\n                container\n                spacing={2}\n                justify=\"center\"\n                alignItems=\"center\"\n                direction=\"row\"\n              >\n                <Grid item lg={4} md={4}>\n                  Name\n                </Grid>\n                <Grid item lg={1} md={1}>\n                  Size\n                </Grid>\n                <Grid item lg={2} md={2}>\n                  Progress\n                </Grid>\n                <Grid item lg={1} md={1}>\n                  Status\n                </Grid>\n                <Grid item lg={4} md={4}>\n                  Actions\n                </Grid>\n              </Grid>\n            </div>\n            <Divider></Divider>\n\n            {isEmpty && <p className=\"px-16\">Que is empty</p>}\n\n            {files.map((item, index) => {\n              let { file, uploading, error, progress } = item;\n              return (\n                <div className=\"px-16 py-16\" key={file.name}>\n                  <Grid\n                    container\n                    spacing={2}\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    direction=\"row\"\n                  >\n                    <Grid item lg={4} md={4} sm={12} xs={12}>\n                      {file.name}\n                    </Grid>\n                    <Grid item lg={1} md={1} sm={12} xs={12}>\n                      {(file.size / 1024 / 1024).toFixed(1)} MB\n                    </Grid>\n                    <Grid item lg={2} md={2} sm={12} xs={12}>\n                      <EgretProgressBar value={progress}></EgretProgressBar>\n                    </Grid>\n                    <Grid item lg={1} md={1} sm={12} xs={12}>\n                      {error && <Icon color=\"error\">error</Icon>}\n                      {/* {uploading && <Icon className=\"text-green\">done</Icon>} */}\n                    </Grid>\n                    <Grid item lg={4} md={4} sm={12} xs={12}>\n                      <div className=\"flex\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={uploading}\n                          onClick={() => this.uploadSingleFile(index)}\n                        >\n                          Upload\n                        </Button>\n                        <Button\n                          className=\"mx-8\"\n                          variant=\"contained\"\n                          disabled={!uploading}\n                          color=\"secondary\"\n                          onClick={() => this.handleSingleCancel(index)}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          variant=\"contained\"\n                          className=\"bg-error\"\n                          onClick={() => this.handleSingleRemove(index)}\n                        >\n                          Remove\n                        </Button>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n              );\n            })}\n          </Card>\n\n          <div>\n            <p className=\"m-0\">Queue progress:</p>\n            <div className=\"py-16\">\n              <EgretProgressBar value={queProgress}></EgretProgressBar>\n            </div>\n            <div className=\"flex\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isEmpty}\n                onClick={this.uploadAllFile}\n              >\n                Upload All\n              </Button>\n              <Button\n                className=\"mx-8\"\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={isEmpty}\n                onClick={this.handleCancelAll}\n              >\n                Cancel All\n              </Button>\n              {!isEmpty && (\n                <Button\n                  variant=\"contained\"\n                  className=\"bg-error\"\n                  onClick={this.handleAllRemove}\n                >\n                  Remove All\n                </Button>\n              )}\n            </div>\n          </div>\n        </SimpleCard>\n      </div>\n    );\n  }\n}\n\nexport default UploadForm;\n"]},"metadata":{},"sourceType":"module"}