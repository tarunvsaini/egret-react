{"ast":null,"code":"import _toConsumableArray from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/list/AppList.jsx\";\nimport React, { Component } from \"react\";\nimport { isMobile } from \"utils\";\nimport ListTopbar from \"./ListTopbar\";\nimport { getAllList } from \"./ListService\";\nimport ListView from \"./ListView\";\nimport GridView from \"./GridView\";\nimport { Hidden } from \"@material-ui/core\";\n\nvar AppList = /*#__PURE__*/function (_Component) {\n  _inherits(AppList, _Component);\n\n  var _super = _createSuper(AppList);\n\n  function AppList() {\n    var _this;\n\n    _classCallCheck(this, AppList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.originalList = [];\n    _this.state = {\n      textfieldValue: \"\",\n      sliderValue: 30,\n      list: [],\n      viewMode: \"grid\" // list, grid\n\n    };\n\n    _this.handleInputChange = function (event) {\n      event.persist();\n\n      _this.setState({\n        textfieldValue: event.target.value\n      }, function () {\n        return _this.setState({\n          list: _this.originalList.filter(function (item) {\n            return item.projectName.toLowerCase().match(event.target.value.toLowerCase());\n          })\n        });\n      });\n    };\n\n    _this.handleSldierChange = function (event, value) {\n      _this.setState({\n        sliderValue: value\n      });\n    };\n\n    _this.handleViewChange = function (view) {\n      _this.setState({\n        viewMode: view\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AppList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getAllList().then(function (response) {\n        _this2.originalList = _toConsumableArray(response.data);\n\n        _this2.setState({\n          list: _toConsumableArray(response.data)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          list = _this$state.list,\n          textfieldValue = _this$state.textfieldValue,\n          sliderValue = _this$state.sliderValue,\n          viewMode = _this$state.viewMode;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListTopbar, {\n        viewMode: viewMode,\n        handleViewChange: this.handleViewChange,\n        handleInputChange: this.handleInputChange,\n        handleSldierChange: this.handleSldierChange,\n        sliderValue: sliderValue,\n        textfieldValue: textfieldValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Hidden, {\n        xsDown: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, viewMode === \"list\" ? /*#__PURE__*/React.createElement(ListView, {\n        list: list,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(GridView, {\n        list: list,\n        sliderValue: sliderValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Hidden, {\n        smUp: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(GridView, {\n        list: list,\n        sliderValue: sliderValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return AppList;\n}(Component);\n\nexport default AppList;","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/list/AppList.jsx"],"names":["React","Component","isMobile","ListTopbar","getAllList","ListView","GridView","Hidden","AppList","originalList","state","textfieldValue","sliderValue","list","viewMode","handleInputChange","event","persist","setState","target","value","filter","item","projectName","toLowerCase","match","handleSldierChange","handleViewChange","view","then","response","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { isMobile } from \"utils\";\nimport ListTopbar from \"./ListTopbar\";\nimport { getAllList } from \"./ListService\";\nimport ListView from \"./ListView\";\nimport GridView from \"./GridView\";\nimport { Hidden } from \"@material-ui/core\";\n\nclass AppList extends Component {\n  originalList = [];\n  state = {\n    textfieldValue: \"\",\n    sliderValue: 30,\n    list: [],\n    viewMode: \"grid\" // list, grid\n  };\n\n  handleInputChange = event => {\n    event.persist();\n    this.setState(\n      {\n        textfieldValue: event.target.value\n      },\n      () =>\n        this.setState({\n          list: this.originalList.filter(item =>\n            item.projectName\n              .toLowerCase()\n              .match(event.target.value.toLowerCase())\n          )\n        })\n    );\n  };\n\n  handleSldierChange = (event, value) => {\n    this.setState({\n      sliderValue: value\n    });\n  };\n\n  handleViewChange = view => {\n    this.setState({\n      viewMode: view\n    });\n  };\n\n  componentDidMount() {\n    getAllList().then(response => {\n      this.originalList = [...response.data];\n      this.setState({\n        list: [...response.data]\n      });\n    });\n  }\n\n  render() {\n    let { list, textfieldValue, sliderValue, viewMode } = this.state;\n    return (\n      <div className=\"list m-sm-30\">\n        <div className=\"mb-16\">\n          <ListTopbar\n            viewMode={viewMode}\n            handleViewChange={this.handleViewChange}\n            handleInputChange={this.handleInputChange}\n            handleSldierChange={this.handleSldierChange}\n            sliderValue={sliderValue}\n            textfieldValue={textfieldValue}\n          ></ListTopbar>\n        </div>\n        <Hidden xsDown>\n          {viewMode === \"list\" ? (\n            <ListView list={list}></ListView>\n          ) : (\n            <GridView list={list} sliderValue={sliderValue}></GridView>\n          )}\n        </Hidden>\n\n        <Hidden smUp>\n          <GridView list={list} sliderValue={sliderValue}></GridView>\n        </Hidden>\n      </div>\n    );\n  }\n}\n\nexport default AppList;\n"]},"metadata":{},"sourceType":"module"}