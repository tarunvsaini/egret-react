{"ast":null,"code":"import _slicedToArray from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/material-kit/menu/SelectedMenu.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n});\nvar options = [\"Show some love to Material-UI\", \"Show all notification content\", \"Hide sensitive notification content\", \"Hide all notification content\"];\nexport default function SelectedMenu() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedIndex = _React$useState4[0],\n      setSelectedIndex = _React$useState4[1];\n\n  function handleClickListItem(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"nav\",\n    \"aria-label\": \"Device settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"lock-menu\",\n    \"aria-label\": \"When device is locked\",\n    onClick: handleClickListItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"When device is locked\",\n    secondary: options[selectedIndex],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Menu, {\n    id: \"lock-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, options.map(function (option, index) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option,\n      disabled: index === 0,\n      selected: index === selectedIndex,\n      onClick: function onClick(event) {\n        return handleMenuItemClick(event, index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, option);\n  })));\n}","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/material-kit/menu/SelectedMenu.jsx"],"names":["React","makeStyles","List","ListItem","ListItemText","MenuItem","Menu","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","options","SelectedMenu","classes","useState","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","handleClickListItem","event","currentTarget","handleMenuItemClick","index","handleClose","Boolean","map","option"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function SelectedMenu() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  function handleClickListItem(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"Device settings\">\n        <ListItem\n          button\n          aria-haspopup=\"true\"\n          aria-controls=\"lock-menu\"\n          aria-label=\"When device is locked\"\n          onClick={handleClickListItem}\n        >\n          <ListItemText\n            primary=\"When device is locked\"\n            secondary={options[selectedIndex]}\n          />\n        </ListItem>\n      </List>\n      <Menu\n        id=\"lock-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, index) => (\n          <MenuItem\n            key={option}\n            disabled={index === 0}\n            selected={index === selectedIndex}\n            onClick={event => handleMenuItemClick(event, index)}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}