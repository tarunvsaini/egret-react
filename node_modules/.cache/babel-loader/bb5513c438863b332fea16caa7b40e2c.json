{"ast":null,"code":"import _objectSpread from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/chat-box/AppChat.jsx\";\nimport React, { Component } from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport { Breadcrumb, EgretSidenavContainer, EgretSidenav, EgretSidenavContent } from \"egret\";\nimport { getAllContact, getRecentContact, sendNewMessage, getContactById, getChatRoomByContactId } from \"./ChatService\";\nimport ChatSidenav from \"./ChatSidenav\";\nimport ChatContainer from \"./ChatContainer\";\nimport { generateRandomId, isMobile } from \"utils\";\n\nvar AppChat = /*#__PURE__*/function (_Component) {\n  _inherits(AppChat, _Component);\n\n  var _super = _createSuper(AppChat);\n\n  function AppChat() {\n    var _this;\n\n    _classCallCheck(this, AppChat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentUser: {\n        id: \"7863a6802ez0e277a0f98534\"\n      },\n      contactList: [],\n      recentContactList: [],\n      messageList: [],\n      currentChatRoom: \"\",\n      opponentUser: null,\n      open: true\n    };\n    _this.bottomRef = React.createRef();\n\n    _this.updateRecentContactList = function () {\n      var id = _this.state.currentUser.id;\n      getRecentContact(id).then(function (data) {\n        _this.setState({\n          recentContactList: _toConsumableArray(data.data)\n        });\n      });\n    };\n\n    _this.scrollToBottom = function () {\n      _this.bottomRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    _this.handleContactClick = function (contactId) {\n      if (isMobile()) _this.toggleSidenav();\n      getContactById(contactId).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          opponentUser: _objectSpread({}, data)\n        });\n      });\n      getChatRoomByContactId(_this.state.currentUser.id, contactId).then(function (_ref2) {\n        var data = _ref2.data;\n        var chatId = data.chatId,\n            messageList = data.messageList,\n            recentListUpdated = data.recentListUpdated;\n        console.log(chatId);\n\n        _this.setState({\n          currentChatRoom: chatId,\n          messageList: messageList\n        }, function () {\n          _this.bottomRef.scrollTop = 9999999999999;\n        });\n\n        if (recentListUpdated) {\n          _this.updateRecentContactList();\n        }\n      });\n    };\n\n    _this.handleMessageSend = function (message) {\n      var id = _this.state.currentUser.id;\n      var _this$state = _this.state,\n          currentChatRoom = _this$state.currentChatRoom,\n          opponentUser = _this$state.opponentUser;\n      if (currentChatRoom === \"\") return;\n      sendNewMessage({\n        chatId: currentChatRoom,\n        text: message,\n        contactId: id,\n        time: new Date()\n      }).then(function (data) {\n        _this.setState({\n          messageList: _toConsumableArray(data.data)\n        }, function () {\n          _this.bottomRef.scrollTop = 9999999999999;\n        }); // bot message\n\n\n        setTimeout(function () {\n          sendNewMessage({\n            chatId: currentChatRoom,\n            text: \"Hi, I'm \".concat(opponentUser.name, \". Your imaginary friend.\"),\n            contactId: opponentUser.id,\n            time: new Date()\n          }).then(function (data) {\n            _this.setState({\n              messageList: _toConsumableArray(data.data)\n            }, function () {\n              _this.bottomRef.scrollTop = 9999999999999;\n            });\n          });\n        }, 750); // bot message ends here\n      });\n    };\n\n    _this.setBottomRef = function (ref) {\n      _this.bottomRef = ref;\n    };\n\n    _this.toggleSidenav = function () {\n      return _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AppChat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = this.state.currentUser.id;\n      getContactById(id).then(function (data) {\n        _this2.setState({\n          open: !isMobile(),\n          currentUser: _objectSpread({}, data.data)\n        });\n      });\n      getAllContact(this.state.currentUser.id).then(function (data) {\n        return _this2.setState({\n          contactList: _toConsumableArray(data.data)\n        });\n      });\n      this.updateRecentContactList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          currentUser = _this$state2.currentUser,\n          contactList = _this$state2.contactList,\n          recentContactList = _this$state2.recentContactList,\n          messageList = _this$state2.messageList,\n          opponentUser = _this$state2.opponentUser,\n          currentChatRoom = _this$state2.currentChatRoom;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: \"Chat\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Card, {\n        elevation: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(EgretSidenavContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EgretSidenav, {\n        width: \"230px\",\n        open: this.state.open,\n        toggleSidenav: this.toggleSidenav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ChatSidenav, {\n        currentUser: currentUser,\n        contactList: contactList,\n        recentContactList: recentContactList,\n        handleContactClick: this.handleContactClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(EgretSidenavContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ChatContainer, {\n        id: currentUser.id,\n        opponentUser: opponentUser,\n        messageList: messageList,\n        currentChatRoom: currentChatRoom,\n        setBottomRef: this.setBottomRef,\n        handleMessageSend: this.handleMessageSend,\n        toggleSidenav: this.toggleSidenav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return AppChat;\n}(Component);\n\nexport default AppChat;","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/chat-box/AppChat.jsx"],"names":["React","Component","Card","Breadcrumb","EgretSidenavContainer","EgretSidenav","EgretSidenavContent","getAllContact","getRecentContact","sendNewMessage","getContactById","getChatRoomByContactId","ChatSidenav","ChatContainer","generateRandomId","isMobile","AppChat","state","currentUser","id","contactList","recentContactList","messageList","currentChatRoom","opponentUser","open","bottomRef","createRef","updateRecentContactList","then","data","setState","scrollToBottom","current","scrollIntoView","behavior","handleContactClick","contactId","toggleSidenav","chatId","recentListUpdated","console","log","scrollTop","handleMessageSend","message","text","time","Date","setTimeout","name","setBottomRef","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport {\n  Breadcrumb,\n  EgretSidenavContainer,\n  EgretSidenav,\n  EgretSidenavContent\n} from \"egret\";\nimport {\n  getAllContact,\n  getRecentContact,\n  sendNewMessage,\n  getContactById,\n  getChatRoomByContactId\n} from \"./ChatService\";\nimport ChatSidenav from \"./ChatSidenav\";\nimport ChatContainer from \"./ChatContainer\";\nimport { generateRandomId, isMobile } from \"utils\";\n\nclass AppChat extends Component {\n  state = {\n    currentUser: {\n      id: \"7863a6802ez0e277a0f98534\"\n    },\n    contactList: [],\n    recentContactList: [],\n    messageList: [],\n    currentChatRoom: \"\",\n    opponentUser: null,\n    open: true\n  };\n\n  bottomRef = React.createRef();\n\n  componentDidMount() {\n    let { id } = this.state.currentUser;\n    getContactById(id).then(data => {\n      this.setState({\n        open: !isMobile(),\n        currentUser: {\n          ...data.data\n        }\n      });\n    });\n    getAllContact(this.state.currentUser.id).then(data =>\n      this.setState({ contactList: [...data.data] })\n    );\n    this.updateRecentContactList();\n  }\n\n  updateRecentContactList = () => {\n    let { id } = this.state.currentUser;\n    getRecentContact(id).then(data => {\n      this.setState({\n        recentContactList: [...data.data]\n      });\n    });\n  };\n\n  scrollToBottom = () => {\n    this.bottomRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  handleContactClick = contactId => {\n    if (isMobile()) this.toggleSidenav();\n\n    getContactById(contactId).then(({ data }) => {\n      this.setState({\n        opponentUser: { ...data }\n      });\n    });\n    getChatRoomByContactId(this.state.currentUser.id, contactId).then(\n      ({ data }) => {\n        let { chatId, messageList, recentListUpdated } = data;\n        console.log(chatId);\n\n        this.setState(\n          {\n            currentChatRoom: chatId,\n            messageList\n          },\n          () => {\n            this.bottomRef.scrollTop = 9999999999999;\n          }\n        );\n        if (recentListUpdated) {\n          this.updateRecentContactList();\n        }\n      }\n    );\n  };\n\n  handleMessageSend = message => {\n    let { id } = this.state.currentUser;\n    let { currentChatRoom, opponentUser } = this.state;\n    if (currentChatRoom === \"\") return;\n    sendNewMessage({\n      chatId: currentChatRoom,\n      text: message,\n      contactId: id,\n      time: new Date()\n    }).then(data => {\n      this.setState(\n        {\n          messageList: [...data.data]\n        },\n        () => {\n          this.bottomRef.scrollTop = 9999999999999;\n        }\n      );\n\n      // bot message\n      setTimeout(() => {\n        sendNewMessage({\n          chatId: currentChatRoom,\n          text: `Hi, I'm ${opponentUser.name}. Your imaginary friend.`,\n          contactId: opponentUser.id,\n          time: new Date()\n        }).then(data => {\n          this.setState(\n            {\n              messageList: [...data.data]\n            },\n            () => {\n              this.bottomRef.scrollTop = 9999999999999;\n            }\n          );\n        });\n      }, 750);\n      // bot message ends here\n    });\n  };\n\n  setBottomRef = ref => {\n    this.bottomRef = ref;\n  };\n\n  toggleSidenav = () => this.setState({ open: !this.state.open });\n\n  render() {\n    let {\n      currentUser,\n      contactList,\n      recentContactList,\n      messageList,\n      opponentUser,\n      currentChatRoom\n    } = this.state;\n    return (\n      <div className=\"m-sm-30\">\n        <div className=\"mb-sm-30\">\n          <Breadcrumb routeSegments={[{ name: \"Chat\" }]} />\n        </div>\n        <Card elevation={6}>\n          <EgretSidenavContainer>\n            <EgretSidenav\n              width=\"230px\"\n              open={this.state.open}\n              toggleSidenav={this.toggleSidenav}\n            >\n              <ChatSidenav\n                currentUser={currentUser}\n                contactList={contactList}\n                recentContactList={recentContactList}\n                handleContactClick={this.handleContactClick}\n              />\n            </EgretSidenav>\n            <EgretSidenavContent>\n              <ChatContainer\n                id={currentUser.id}\n                opponentUser={opponentUser}\n                messageList={messageList}\n                currentChatRoom={currentChatRoom}\n                setBottomRef={this.setBottomRef}\n                handleMessageSend={this.handleMessageSend}\n                toggleSidenav={this.toggleSidenav}\n              />\n            </EgretSidenavContent>\n          </EgretSidenavContainer>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default AppChat;\n"]},"metadata":{},"sourceType":"module"}