{"ast":null,"code":"import _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/charts/react-vis/VisBarChart.jsx\";\nimport React from \"react\";\nimport { FlexibleWidthXYPlot, XAxis, YAxis, VerticalBarSeries, VerticalBarSeriesCanvas, LabelSeries } from \"react-vis\";\nimport { withStyles } from \"@material-ui/core\";\nvar greenData = [{\n  x: \"A\",\n  y: 10\n}, {\n  x: \"B\",\n  y: 5\n}, {\n  x: \"C\",\n  y: 15\n}];\nvar blueData = [{\n  x: \"A\",\n  y: 12\n}, {\n  x: \"B\",\n  y: 2\n}, {\n  x: \"C\",\n  y: 11\n}];\nvar labelData = greenData.map(function (d, idx) {\n  return {\n    x: d.x,\n    y: Math.max(greenData[idx].y, blueData[idx].y)\n  };\n});\n\nvar VisBarChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(VisBarChart, _React$Component);\n\n  var _super = _createSuper(VisBarChart);\n\n  function VisBarChart() {\n    var _this;\n\n    _classCallCheck(this, VisBarChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      useCanvas: false\n    };\n    return _this;\n  }\n\n  _createClass(VisBarChart, [{\n    key: \"render\",\n    value: function render() {\n      var useCanvas = this.state.useCanvas;\n      var theme = this.props.theme;\n      var BarSeries = useCanvas ? VerticalBarSeriesCanvas : VerticalBarSeries;\n      return /*#__PURE__*/React.createElement(FlexibleWidthXYPlot, {\n        xType: \"ordinal\",\n        height: 300,\n        xDistance: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(XAxis, {\n        style: {\n          text: {\n            stroke: \"none\",\n            fill: theme.palette.text.secondary,\n            fontWeight: 600\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        style: {\n          text: {\n            stroke: \"none\",\n            fill: theme.palette.text.secondary,\n            fontWeight: 600\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(BarSeries, {\n        className: \"vertical-bar-series-example\",\n        data: greenData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(BarSeries, {\n        data: blueData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(LabelSeries, {\n        data: labelData,\n        getLabel: function getLabel(d) {\n          return d.x;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return VisBarChart;\n}(React.Component);\n\nexport default withStyles({}, {\n  withTheme: true\n})(VisBarChart);","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/charts/react-vis/VisBarChart.jsx"],"names":["React","FlexibleWidthXYPlot","XAxis","YAxis","VerticalBarSeries","VerticalBarSeriesCanvas","LabelSeries","withStyles","greenData","x","y","blueData","labelData","map","d","idx","Math","max","VisBarChart","state","useCanvas","theme","props","BarSeries","text","stroke","fill","palette","secondary","fontWeight","Component","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  FlexibleWidthXYPlot,\n  XAxis,\n  YAxis,\n  VerticalBarSeries,\n  VerticalBarSeriesCanvas,\n  LabelSeries\n} from \"react-vis\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst greenData = [{ x: \"A\", y: 10 }, { x: \"B\", y: 5 }, { x: \"C\", y: 15 }];\n\nconst blueData = [{ x: \"A\", y: 12 }, { x: \"B\", y: 2 }, { x: \"C\", y: 11 }];\n\nconst labelData = greenData.map((d, idx) => ({\n  x: d.x,\n  y: Math.max(greenData[idx].y, blueData[idx].y)\n}));\n\nclass VisBarChart extends React.Component {\n  state = {\n    useCanvas: false\n  };\n\n  render() {\n    const { useCanvas } = this.state;\n    let { theme } = this.props;\n    const BarSeries = useCanvas ? VerticalBarSeriesCanvas : VerticalBarSeries;\n    return (\n      <FlexibleWidthXYPlot xType=\"ordinal\" height={300} xDistance={100}>\n        <XAxis\n          style={{\n            text: {\n              stroke: \"none\",\n              fill: theme.palette.text.secondary,\n              fontWeight: 600\n            }\n          }}\n        />\n        <YAxis\n          style={{\n            text: {\n              stroke: \"none\",\n              fill: theme.palette.text.secondary,\n              fontWeight: 600\n            }\n          }}\n        />\n        <BarSeries className=\"vertical-bar-series-example\" data={greenData} />\n        <BarSeries data={blueData} />\n        <LabelSeries data={labelData} getLabel={d => d.x} />\n      </FlexibleWidthXYPlot>\n    );\n  }\n}\n\nexport default withStyles({}, { withTheme: true })(VisBarChart);\n"]},"metadata":{},"sourceType":"module"}