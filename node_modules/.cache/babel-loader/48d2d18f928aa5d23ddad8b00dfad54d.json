{"ast":null,"code":"import _toConsumableArray from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/scrum-board/Board.jsx\";\nimport React, { Component } from \"react\";\nimport { Icon, IconButton, Avatar, Tooltip, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport ScrumBoardContainer from \"./ScrumBoardContainer\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { addNewCardInList } from \"./ScrumBoardService\";\nimport { EgretMenu } from \"egret\";\nimport { getBoardById, addListInBoard, getAllMembers, getAllLabels, addMemberInBoard, deleteMemberFromBoard } from \"../../redux/actions/ScrumBoardActions\";\n\nvar Board = /*#__PURE__*/function (_Component) {\n  _inherits(Board, _Component);\n\n  var _super = _createSuper(Board);\n\n  function Board() {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      board: {\n        title: \"\",\n        members: [],\n        list: []\n      }\n    };\n\n    _this.handleAddList = function (listTitle) {\n      if (listTitle !== \"\") {\n        _this.props.addListInBoard({\n          boardId: _this.state.board.id,\n          listTitle: listTitle\n        });\n      }\n    };\n\n    _this.handleAddNewCard = function (cardData) {\n      addNewCardInList(_objectSpread({\n        boardId: _this.props.match.params.id\n      }, cardData)).then(function (list) {\n        _this.setState({\n          board: _objectSpread(_objectSpread({}, _this.state.board), {}, {\n            list: _toConsumableArray(list.data)\n          })\n        });\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var memberId = event.target.value;\n      var _this$state$board = _this.state.board,\n          members = _this$state$board.members,\n          id = _this$state$board.id;\n      var _this$props = _this.props,\n          deleteMemberFromBoard = _this$props.deleteMemberFromBoard,\n          addMemberInBoard = _this$props.addMemberInBoard;\n\n      if (members.some(function (member) {\n        return member.id === memberId;\n      })) {\n        deleteMemberFromBoard({\n          boardId: id,\n          memberId: memberId\n        });\n      } else addMemberInBoard({\n        boardId: id,\n        memberId: memberId\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var boardId = this.props.match.params.id;\n      this.props.getBoardById(boardId);\n      this.props.getAllMembers();\n      this.props.getAllLabels();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state$board2 = this.state.board,\n          _this$state$board2$me = _this$state$board2.members,\n          members = _this$state$board2$me === void 0 ? [] : _this$state$board2$me,\n          title = _this$state$board2.title,\n          _this$state$board2$li = _this$state$board2.list,\n          list = _this$state$board2$li === void 0 ? [] : _this$state$board2$li;\n      var _this$props$memberLis = this.props.memberList,\n          memberList = _this$props$memberLis === void 0 ? [] : _this$props$memberLis;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"scrum-board m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-wrap flex-middle flex-space-between mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/scrum-board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"arrow_back\"))), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"m-0 ml-8 capitalize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, title), /*#__PURE__*/React.createElement(IconButton, {\n        className: \"ml-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, \"star_outline\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex position-relative face-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, members.map(function (member, index) {\n        return /*#__PURE__*/React.createElement(Tooltip, {\n          key: index,\n          title: member.name,\n          fontSize: \"large\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Avatar, {\n          className: \"avatar\",\n          src: member.avatar,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }\n        }));\n      }), /*#__PURE__*/React.createElement(EgretMenu, {\n        horizontalPosition: \"right\",\n        shouldCloseOnItemClick: false,\n        menuButton: /*#__PURE__*/React.createElement(Tooltip, {\n          title: \"Add\",\n          fontSize: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Avatar, {\n          className: \"avatar ml--12 cursor-pointer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }\n        }, \"+\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, memberList.map(function (user) {\n        return /*#__PURE__*/React.createElement(FormControlLabel, {\n          className: \"ml-0\",\n          key: user.id,\n          control: /*#__PURE__*/React.createElement(Checkbox, {\n            checked: members.some(function (member) {\n              return member.id === user.id;\n            }),\n            onChange: _this2.handleChange,\n            value: user.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }\n          }),\n          label: /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flex flex-middle\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Avatar, {\n            src: user.avatar,\n            className: \"size-24\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 23\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"ml-12\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 23\n            }\n          }, user.name)),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }\n        });\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ScrumBoardContainer, {\n        list: list,\n        handleAddList: this.handleAddList,\n        handleAddNewCard: this.handleAddNewCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        board: _objectSpread({}, nextProps.board)\n      };\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    getBoardById: PropTypes.func.isRequired,\n    addListInBoard: PropTypes.func.isRequired,\n    getAllMembers: PropTypes.func.isRequired,\n    getAllLabels: PropTypes.func.isRequired,\n    addMemberInBoard: PropTypes.func.isRequired,\n    deleteMemberFromBoard: PropTypes.func.isRequired,\n    board: state.scrumboard.board,\n    memberList: state.scrumboard.memberList,\n    labelList: state.scrumboard.labelList\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getBoardById: getBoardById,\n  addListInBoard: addListInBoard,\n  getAllMembers: getAllMembers,\n  getAllLabels: getAllLabels,\n  addMemberInBoard: addMemberInBoard,\n  deleteMemberFromBoard: deleteMemberFromBoard\n})(Board);","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/scrum-board/Board.jsx"],"names":["React","Component","Icon","IconButton","Avatar","Tooltip","FormControlLabel","Checkbox","ScrumBoardContainer","Link","connect","PropTypes","addNewCardInList","EgretMenu","getBoardById","addListInBoard","getAllMembers","getAllLabels","addMemberInBoard","deleteMemberFromBoard","Board","state","board","title","members","list","handleAddList","listTitle","props","boardId","id","handleAddNewCard","cardData","match","params","then","setState","data","handleChange","event","memberId","target","value","some","member","memberList","map","index","name","avatar","user","nextProps","prevState","mapStateToProps","func","isRequired","scrumboard","labelList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Icon,\n  IconButton,\n  Avatar,\n  Tooltip,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\nimport ScrumBoardContainer from \"./ScrumBoardContainer\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { addNewCardInList } from \"./ScrumBoardService\";\nimport { EgretMenu } from \"egret\";\n\nimport {\n  getBoardById,\n  addListInBoard,\n  getAllMembers,\n  getAllLabels,\n  addMemberInBoard,\n  deleteMemberFromBoard\n} from \"../../redux/actions/ScrumBoardActions\";\n\nclass Board extends Component {\n  state = {\n    board: {\n      title: \"\",\n      members: [],\n      list: []\n    }\n  };\n\n  componentDidMount() {\n    let boardId = this.props.match.params.id;\n    this.props.getBoardById(boardId);\n    this.props.getAllMembers();\n    this.props.getAllLabels();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      board: { ...nextProps.board }\n    };\n  }\n\n  handleAddList = listTitle => {\n    if (listTitle !== \"\") {\n      this.props.addListInBoard({\n        boardId: this.state.board.id,\n        listTitle\n      });\n    }\n  };\n\n  handleAddNewCard = cardData => {\n    addNewCardInList({\n      boardId: this.props.match.params.id,\n      ...cardData\n    }).then(list => {\n      this.setState({ board: { ...this.state.board, list: [...list.data] } });\n    });\n  };\n\n  handleChange = event => {\n    let memberId = event.target.value;\n    let { members, id } = this.state.board;\n    let { deleteMemberFromBoard, addMemberInBoard } = this.props;\n    if (members.some(member => member.id === memberId)) {\n      deleteMemberFromBoard({ boardId: id, memberId });\n    } else addMemberInBoard({ boardId: id, memberId });\n  };\n\n  render() {\n    let { members = [], title, list = [] } = this.state.board;\n    let { memberList = [] } = this.props;\n\n    return (\n      <div className=\"scrum-board m-sm-30\">\n        <div className=\"flex flex-wrap flex-middle flex-space-between mb-16\">\n          <div className=\"flex flex-middle\">\n            <Link to=\"/scrum-board\">\n              <IconButton>\n                <Icon>arrow_back</Icon>\n              </IconButton>\n            </Link>\n            <h5 className=\"m-0 ml-8 capitalize\">{title}</h5>\n            <IconButton className=\"ml-8\">\n              <Icon>star_outline</Icon>\n            </IconButton>\n          </div>\n\n          <div className=\"flex position-relative face-group\">\n            {members.map((member, index) => (\n              <Tooltip key={index} title={member.name} fontSize=\"large\">\n                <Avatar className=\"avatar\" src={member.avatar} />\n              </Tooltip>\n            ))}\n            <EgretMenu\n              horizontalPosition=\"right\"\n              shouldCloseOnItemClick={false}\n              menuButton={\n                <Tooltip title={\"Add\"} fontSize=\"large\">\n                  <Avatar className=\"avatar ml--12 cursor-pointer\">+</Avatar>\n                </Tooltip>\n              }\n            >\n              {memberList.map(user => (\n                <FormControlLabel\n                  className=\"ml-0\"\n                  key={user.id}\n                  control={\n                    <Checkbox\n                      checked={members.some(member => member.id === user.id)}\n                      onChange={this.handleChange}\n                      value={user.id}\n                    />\n                  }\n                  label={\n                    <div className=\"flex flex-middle\">\n                      <Avatar src={user.avatar} className=\"size-24\"></Avatar>\n                      <span className=\"ml-12\">{user.name}</span>\n                    </div>\n                  }\n                />\n              ))}\n            </EgretMenu>\n            {/* <Avatar className=\"number-avatar avatar\">+3</Avatar> */}\n          </div>\n        </div>\n\n        <div className=\"position-relative\">\n          <ScrumBoardContainer\n            list={list}\n            handleAddList={this.handleAddList}\n            handleAddNewCard={this.handleAddNewCard}\n          ></ScrumBoardContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  getBoardById: PropTypes.func.isRequired,\n  addListInBoard: PropTypes.func.isRequired,\n  getAllMembers: PropTypes.func.isRequired,\n  getAllLabels: PropTypes.func.isRequired,\n  addMemberInBoard: PropTypes.func.isRequired,\n  deleteMemberFromBoard: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getBoardById,\n    addListInBoard,\n    getAllMembers,\n    getAllLabels,\n    addMemberInBoard,\n    deleteMemberFromBoard\n  }\n)(Board);\n"]},"metadata":{},"sourceType":"module"}