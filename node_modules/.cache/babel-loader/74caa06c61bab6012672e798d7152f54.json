{"ast":null,"code":"import _objectSpread from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/EgretLayout/SharedCompoents/EgretCustomizer/EgretCustomizer.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings, setDefaultSettings } from \"app/redux/actions/LayoutActions\";\nimport { PropTypes } from \"prop-types\";\nimport { Icon, IconButton, FormGroup, Tooltip, Switch, FormControlLabel, FormControl, FormLabel, Paper, withStyles, MuiThemeProvider, Button } from \"@material-ui/core\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { merge, get, set } from \"lodash\";\nimport Layout1Customizer from \"./Layout1Customizer\";\nimport Layout2Customizer from \"./Layout2Customizer\";\nimport { themeColors } from \"../../EgretTheme/themeColors\";\nimport BadgeSelected from \"./BadgeSelected\";\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {},\n    paper: {\n      display: \"inherit\"\n    }\n  };\n};\n\nvar EgretCustomizer = /*#__PURE__*/function (_Component) {\n  _inherits(EgretCustomizer, _Component);\n\n  var _super = _createSuper(EgretCustomizer);\n\n  function EgretCustomizer() {\n    var _this;\n\n    _classCallCheck(this, EgretCustomizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      open: false\n    };\n\n    _this.updateSettings = function (newSettings) {\n      var _this$props = _this.props,\n          settings = _this$props.settings,\n          setLayoutSettings = _this$props.setLayoutSettings,\n          setDefaultSettings = _this$props.setDefaultSettings;\n      var updatedSettings = merge({}, settings, newSettings);\n      setLayoutSettings(updatedSettings);\n      setDefaultSettings(updatedSettings);\n    };\n\n    _this.selectLayout = function (activeLayout) {\n      _this.updateSettings({\n        activeLayout: activeLayout\n      });\n    };\n\n    _this.handleChange = function (name, value) {\n      var settings = _this.props.settings;\n      var updatedSettings = set(settings, name, value);\n\n      _this.updateSettings(updatedSettings);\n    };\n\n    _this.handleControlChange = function (name) {\n      return function (event) {\n        var controlValue = event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n        _this.handleChange(name, controlValue);\n      };\n    };\n\n    _this.tooglePanel = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EgretCustomizer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          settings = _this$props2.settings,\n          classes = _this$props2.classes;\n\n      var activeTheme = _objectSpread({}, settings.themes[settings.activeTheme]); // console.log(activeTheme);\n\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Theme Settings\",\n        placement: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        size: \"small\",\n        \"aria-label\": \"delete\",\n        className: \"my-12\",\n        onClick: this.tooglePanel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, \"settings\"))), this.state.open && /*#__PURE__*/React.createElement(MuiThemeProvider, {\n        theme: activeTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"egret-customizer pb-8 \".concat(classes.root),\n        style: {\n          backgroundColor: activeTheme.palette.background.default\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex felx-row flex-middle p-16 mb-16 elevation-z6\",\n        style: {\n          minHeight: \"64px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, \"settings\"), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mb-0 ml-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, \"Theme Settings\"), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.tooglePanel,\n        className: \"customizer-close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(Scrollbar, {\n        options: {\n          suppressScrollX: true\n        },\n        className: \"px-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-8 mb-32 mx-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }\n      }, \"Layouts\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"layout-boxes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(BadgeSelected, {\n        color: \"secondary\",\n        className: \"layout-box\",\n        badgeContent: /*#__PURE__*/React.createElement(Icon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 37\n          }\n        }, \"done\"),\n        invisible: settings.activeLayout !== \"layout1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.selectLayout(\"layout1\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 23\n        }\n      }, \"Layout 1\")), /*#__PURE__*/React.createElement(BadgeSelected, {\n        color: \"secondary\",\n        className: \"layout-box\",\n        badgeContent: /*#__PURE__*/React.createElement(Icon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 37\n          }\n        }, \"done\"),\n        invisible: settings.activeLayout !== \"layout2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.selectLayout(\"layout2\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 23\n        }\n      }, \"Layout 2\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-16 mx-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-muted mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      }, \"Main theme\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"colors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, mainThemes.map(function (color, i) {\n        return /*#__PURE__*/React.createElement(Tooltip, {\n          key: i,\n          title: color,\n          placement: \"top\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"color\",\n          onClick: function onClick() {\n            return _this2.updateSettings({\n              activeTheme: color\n            });\n          },\n          style: {\n            backgroundColor: themeColors[color].palette.primary.main\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }\n        }, settings.activeTheme === color && /*#__PURE__*/React.createElement(Icon, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 62\n          }\n        }, \"done\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: settings.themes[color].palette.type,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 27\n          }\n        })));\n      }))), settings.activeLayout === \"layout1\" && /*#__PURE__*/React.createElement(Layout1Customizer, {\n        settings: settings,\n        handleChange: this.handleChange,\n        handleControlChange: this.handleControlChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }\n      }), settings.activeLayout === \"layout2\" && /*#__PURE__*/React.createElement(Layout2Customizer, {\n        settings: settings,\n        handleChange: this.handleChange,\n        handleControlChange: this.handleControlChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mx-12 mb-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        component: \"fieldset\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        component: \"legend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }\n      }, \"Footer\"), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Switch, {\n          checked: get(settings.footer, \"show\"),\n          onChange: this.handleControlChange(\"footer.show\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 27\n          }\n        }),\n        label: \"Show\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Switch, {\n          checked: get(settings.layout1Settings.footer, \"fixed\"),\n          onChange: this.handleControlChange(\"footer.fixed\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 27\n          }\n        }),\n        label: \"Fixed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mx-12 mb-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        component: \"fieldset\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        component: \"legend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, \"Secondary sidebar\"), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Switch, {\n          checked: get(settings.secondarySidebar, \"show\"),\n          onChange: this.handleControlChange(\"secondarySidebar.show\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 27\n          }\n        }),\n        label: \"Show\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-16 mx-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-muted mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }, \"Secondary sidebar theme\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"colors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }\n      }, topbarThemes.map(function (color, i) {\n        return /*#__PURE__*/React.createElement(Tooltip, {\n          key: i,\n          title: color,\n          placement: \"top\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"color\",\n          onClick: function onClick() {\n            return _this2.handleChange(\"secondarySidebar.theme\", color);\n          },\n          style: {\n            backgroundColor: themeColors[color].palette.primary.main\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }\n        }, settings.secondarySidebar.theme === color && /*#__PURE__*/React.createElement(Icon, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }\n        }, \"done\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: settings.themes[color].palette.type,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 27\n          }\n        })));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-16 mx-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-muted mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 19\n        }\n      }, \"Footer theme\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"colors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 19\n        }\n      }, topbarThemes.map(function (color, i) {\n        return /*#__PURE__*/React.createElement(Tooltip, {\n          key: i,\n          title: color,\n          placement: \"top\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"color\",\n          onClick: function onClick() {\n            return _this2.handleChange(\"footer.theme\", color);\n          },\n          style: {\n            backgroundColor: themeColors[color].palette.primary.main\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }\n        }, settings.footer.theme === color && /*#__PURE__*/React.createElement(Icon, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 63\n          }\n        }, \"done\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: settings.themes[color].palette.type,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 27\n          }\n        })));\n      })))))));\n    }\n  }]);\n\n  return EgretCustomizer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    settings: state.layout.settings,\n    setLayoutSettings: PropTypes.func.isRequired,\n    setDefaultSettings: PropTypes.func.isRequired\n  };\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, {\n  setLayoutSettings: setLayoutSettings,\n  setDefaultSettings: setDefaultSettings\n})(EgretCustomizer));","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/EgretLayout/SharedCompoents/EgretCustomizer/EgretCustomizer.jsx"],"names":["React","Component","Fragment","connect","setLayoutSettings","setDefaultSettings","PropTypes","Icon","IconButton","FormGroup","Tooltip","Switch","FormControlLabel","FormControl","FormLabel","Paper","withStyles","MuiThemeProvider","Button","Scrollbar","merge","get","set","Layout1Customizer","Layout2Customizer","themeColors","BadgeSelected","mainThemes","topbarThemes","styles","theme","root","paper","display","EgretCustomizer","state","open","updateSettings","newSettings","props","settings","updatedSettings","selectLayout","activeLayout","handleChange","name","value","handleControlChange","event","controlValue","target","type","checked","tooglePanel","setState","classes","activeTheme","themes","backgroundColor","palette","background","default","minHeight","suppressScrollX","map","color","i","primary","main","footer","layout1Settings","secondarySidebar","mapStateToProps","layout","func","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { PropTypes } from \"prop-types\";\nimport {\n  Icon,\n  IconButton,\n  FormGroup,\n  Tooltip,\n  Switch,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Paper,\n  withStyles,\n  MuiThemeProvider,\n  Button\n} from \"@material-ui/core\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { merge, get, set } from \"lodash\";\nimport Layout1Customizer from \"./Layout1Customizer\";\nimport Layout2Customizer from \"./Layout2Customizer\";\nimport { themeColors } from \"../../EgretTheme/themeColors\";\nimport BadgeSelected from \"./BadgeSelected\";\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\n\nconst styles = theme => ({\n  root: {\n    \n  },\n  paper: {\n    display: \"inherit\"\n  }\n});\n\nclass EgretCustomizer extends Component {\n  state = {\n    open: false\n  };\n\n  updateSettings = newSettings => {\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\n    let updatedSettings = merge({}, settings, newSettings);\n    setLayoutSettings(updatedSettings);\n    setDefaultSettings(updatedSettings);\n  };\n\n  selectLayout = activeLayout => {\n    this.updateSettings({ activeLayout });\n  };\n\n  handleChange = (name, value) => {\n    let { settings } = this.props;\n    let updatedSettings = set(settings, name, value);\n\n    this.updateSettings(updatedSettings);\n  };\n\n  handleControlChange = name => event => {\n    let controlValue =\n      event.target.type === \"checkbox\"\n        ? event.target.checked\n        : event.target.value;\n    this.handleChange(name, controlValue);\n  };\n\n  tooglePanel = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  render() {\n    let { settings, classes } = this.props;\n    let activeTheme = { ...settings.themes[settings.activeTheme] };\n    // console.log(activeTheme);\n\n    return (\n      <Fragment>\n        <Tooltip title=\"Theme Settings\" placement=\"left\">\n          <IconButton\n            size=\"small\"\n            aria-label=\"delete\"\n            className=\"my-12\"\n            onClick={this.tooglePanel}\n          >\n            <Icon className=\"spin\">settings</Icon>\n          </IconButton>\n        </Tooltip>\n\n        {this.state.open && (\n          <MuiThemeProvider theme={activeTheme}>\n            <div\n              className={`egret-customizer pb-8 ${classes.root}`}\n              style={{\n                backgroundColor: activeTheme.palette.background.default\n              }}\n            >\n              <div className=\"flex felx-row flex-middle p-16 mb-16 elevation-z6\" style={{minHeight: \"64px\"}}>\n                <Icon color=\"primary\">settings</Icon>\n                <h5 className=\"mb-0 ml-8\">Theme Settings</h5>\n                <IconButton\n                  onClick={this.tooglePanel}\n                  className=\"customizer-close\"\n                >\n                  <Icon>close</Icon>\n                </IconButton>\n              </div>\n              <Scrollbar options={{ suppressScrollX: true }} className=\"px-16\">\n                <div className=\"mt-8 mb-32 mx-12\">\n                  <div className=\"text-muted\">Layouts</div>\n\n                  <div className=\"layout-boxes\">\n                    <BadgeSelected\n                      color=\"secondary\"\n                      className=\"layout-box\"\n                      badgeContent={<Icon>done</Icon>}\n                      invisible={settings.activeLayout !== \"layout1\"}\n                    >\n                      <Button variant=\"contained\" color=\"primary\" onClick={() => this.selectLayout(\"layout1\")}>Layout 1</Button>\n                    </BadgeSelected>\n                    <BadgeSelected\n                      color=\"secondary\"\n                      className=\"layout-box\"\n                      badgeContent={<Icon>done</Icon>}\n                      invisible={settings.activeLayout !== \"layout2\"}\n                    >\n                      <Button variant=\"contained\" color=\"primary\" onClick={() => this.selectLayout(\"layout2\")}>Layout 2</Button>\n                    </BadgeSelected>\n                  </div>\n                </div>\n                {/* END LAYOUT */}\n\n                <div className=\"mb-16 mx-12\">\n                  <div className=\"text-muted mb-4\">Main theme</div>\n                  <div className=\"colors\">\n                    {mainThemes.map((color, i) => (\n                      <Tooltip key={i} title={color} placement=\"top\">\n                        <div\n                          className=\"color\"\n                          onClick={() =>\n                            this.updateSettings({ activeTheme: color })\n                          }\n                          style={{\n                            backgroundColor:\n                              themeColors[color].palette.primary.main\n                          }}\n                        >\n                          {settings.activeTheme === color && <Icon>done</Icon>}\n                          <div\n                            className={settings.themes[color].palette.type}\n                          ></div>\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </div>\n\n                {settings.activeLayout === \"layout1\" && (\n                  <Layout1Customizer\n                    settings={settings}\n                    handleChange={this.handleChange}\n                    handleControlChange={this.handleControlChange}\n                  />\n                )}\n\n                {settings.activeLayout === \"layout2\" && (\n                  <Layout2Customizer\n                    settings={settings}\n                    handleChange={this.handleChange}\n                    handleControlChange={this.handleControlChange}\n                  />\n                )}\n\n                <div className=\"mx-12 mb-24\">\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Footer</FormLabel>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={get(settings.footer, \"show\")}\n                            onChange={this.handleControlChange(\"footer.show\")}\n                          />\n                        }\n                        label=\"Show\"\n                      />\n\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={get(\n                              settings.layout1Settings.footer,\n                              \"fixed\"\n                            )}\n                            onChange={this.handleControlChange(\"footer.fixed\")}\n                          />\n                        }\n                        label=\"Fixed\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                </div>\n\n                <div className=\"mx-12 mb-24\">\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Secondary sidebar</FormLabel>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={get(settings.secondarySidebar, \"show\")}\n                            onChange={this.handleControlChange(\n                              \"secondarySidebar.show\"\n                            )}\n                          />\n                        }\n                        label=\"Show\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                </div>\n\n                <div className=\"mb-16 mx-12\">\n                  <div className=\"text-muted mb-4\">Secondary sidebar theme</div>\n                  <div className=\"colors\">\n                    {topbarThemes\n                    .map((color, i) => (\n                      <Tooltip key={i} title={color} placement=\"top\">\n                        <div\n                          className=\"color\"\n                          onClick={() =>\n                            this.handleChange(\"secondarySidebar.theme\", color)\n                          }\n                          style={{\n                            backgroundColor:\n                              themeColors[color].palette.primary.main\n                          }}\n                        >\n                          {settings.secondarySidebar.theme === color && (\n                            <Icon>done</Icon>\n                          )}\n                          <div\n                            className={settings.themes[color].palette.type}\n                          ></div>\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"mb-16 mx-12\">\n                  <div className=\"text-muted mb-4\">Footer theme</div>\n                  <div className=\"colors\">\n                    {topbarThemes\n                    .map((color, i) => (\n                      <Tooltip key={i} title={color} placement=\"top\">\n                        <div\n                          className=\"color\"\n                          onClick={() =>\n                            this.handleChange(\"footer.theme\", color)\n                          }\n                          style={{\n                            backgroundColor:\n                              themeColors[color].palette.primary.main\n                          }}\n                        >\n                          {settings.footer.theme === color && <Icon>done</Icon>}\n                          <div\n                            className={settings.themes[color].palette.type}\n                          ></div>\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </div>\n              </Scrollbar>\n            </div>\n          </MuiThemeProvider>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings,\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { setLayoutSettings, setDefaultSettings }\n  )(EgretCustomizer)\n);\n"]},"metadata":{},"sourceType":"module"}