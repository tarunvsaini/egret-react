{"ast":null,"code":"import _classCallCheck from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tarunsaini/Projects/arctic-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/scrum-board/ScrumBoardContainer.jsx\";\nimport React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport CardEditorDialog from \"./CardEditorDialog\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport BoardList from \"./BoardList\";\nimport { Avatar, Card, ClickAwayListener, TextField, InputAdornment, IconButton, Icon, Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addNewColumnInBoard } from \"./ScrumBoardService\";\nimport { reorderCardInList, reorderList, moveCardInList } from \"../../redux/actions/ScrumBoardActions\";\n\nvar ScrumBoardContainer = /*#__PURE__*/function (_Component) {\n  _inherits(ScrumBoardContainer, _Component);\n\n  var _super = _createSuper(ScrumBoardContainer);\n\n  function ScrumBoardContainer() {\n    var _this;\n\n    _classCallCheck(this, ScrumBoardContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dataLoaded: false,\n      list: [],\n      shouldOpenDialog: false,\n      shouldOpenAddList: false,\n      columnTitle: \"\"\n    };\n\n    _this.handleCardClick = function (card) {\n      _this.setState({\n        shouldOpenDialog: true,\n        card: card\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenDialog: false\n      });\n    };\n\n    _this.handleAddListToggle = function (value) {\n      _this.setState({\n        shouldOpenAddList: value\n      });\n    };\n\n    _this.handleChange = function (event) {\n      if (event.key === \"Enter\" && !event.shiftKey) {\n        _this.props.handleAddList(_this.state.columnTitle);\n\n        _this.setState({\n          columnTitle: \"\"\n        });\n      } else _this.setState({\n        columnTitle: event.target.value\n      });\n    };\n\n    _this.onDragEnd = function (result) {\n      var source = result.source,\n          destination = result.destination;\n      var _this$props = _this.props,\n          board = _this$props.board,\n          reorderCardInList = _this$props.reorderCardInList,\n          moveCardInList = _this$props.moveCardInList,\n          reorderList = _this$props.reorderList; // if dropped outside of list\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === \"horizontal-droppable\") {\n        reorderList(board.id, source.index, destination.index);\n      } else {\n        if (source.droppableId === destination.droppableId) {\n          reorderCardInList(board.id, source.droppableId, source.index, destination.index);\n        } else {\n          moveCardInList(board.id, source.droppableId, destination.droppableId, source, destination);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ScrumBoardContainer, [{\n    key: \"componentDidMount\",\n    value: // convert this into a list instead of hard coded state object\n    function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n    function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          shouldOpenDialog = _this$state.shouldOpenDialog,\n          shouldOpenAddList = _this$state.shouldOpenAddList,\n          columnTitle = _this$state.columnTitle,\n          card = _this$state.card;\n      var _this$props2 = this.props,\n          list = _this$props2.list,\n          handleAddList = _this$props2.handleAddList,\n          handleAddNewCard = _this$props2.handleAddNewCard;\n      return /*#__PURE__*/React.createElement(Scrollbar, {\n        className: \"position-relative flex pb-16 w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"horizontal-droppable\",\n        direction: \"horizontal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, function (provided) {\n        return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.droppableProps, {\n          className: \"flex\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }\n        }), list.map(function (column, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: column.id,\n            draggableId: column.id,\n            index: index,\n            type: \"column\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(BoardList, {\n              data: {\n                provided: provided,\n                snapshot: snapshot,\n                column: column\n              },\n              handleCardClick: _this2.handleCardClick,\n              handleDialogClose: _this2.handleDialogClose,\n              handleAddNewCard: handleAddNewCard,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }\n            });\n          });\n        }), provided.placeholder);\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, shouldOpenAddList ? /*#__PURE__*/React.createElement(ClickAwayListener, {\n        onClickAway: function onClickAway() {\n          return _this2.handleAddListToggle(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          minWidth: \"290px\"\n        },\n        className: \"list-column border-radius-0 cursor-pointer p-16\",\n        elevation: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        className: \"mb-12\",\n        variant: \"outlined\",\n        name: \"columnTitle\",\n        value: columnTitle,\n        fullWidth: true,\n        onChange: this.handleChange,\n        onKeyDown: this.handleChange,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            size: \"small\",\n            onClick: function onClick() {\n              return _this2.handleAddListToggle(false);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            fontSize: \"small\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 27\n            }\n          }, \"clear\")))\n        },\n        inputProps: {\n          style: {\n            padding: \"10px\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          handleAddList(columnTitle);\n\n          _this2.setState({\n            columnTitle: \"\"\n          });\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }\n      }, \"Add\")))) : /*#__PURE__*/React.createElement(Card, {\n        className: \"list-column cursor-pointer flex flex-middle py-16 px-16 bg-light-gray\",\n        elevation: 3,\n        style: {\n          minWidth: \"290px\"\n        },\n        onClick: function onClick() {\n          return _this2.handleAddListToggle(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        className: \"size-24 bg-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }, \"+\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-8 font-weight-500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, \"Add List\"))), shouldOpenDialog && /*#__PURE__*/React.createElement(CardEditorDialog, {\n        card: card,\n        open: shouldOpenDialog,\n        handleClose: this.handleDialogClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return ScrumBoardContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    reorderCardInList: PropTypes.func.isRequired,\n    reorderList: PropTypes.func.isRequired,\n    moveCardInList: PropTypes.func.isRequired,\n    board: state.scrumboard.board,\n    memberList: state.scrumboard.memberList,\n    labelList: state.scrumboard.labelList\n  };\n};\n\nexport default connect(mapStateToProps, {\n  reorderCardInList: reorderCardInList,\n  reorderList: reorderList,\n  moveCardInList: moveCardInList\n})(ScrumBoardContainer);","map":{"version":3,"sources":["/Users/tarunsaini/Projects/arctic-admin/react/src/app/views/scrum-board/ScrumBoardContainer.jsx"],"names":["React","Component","DragDropContext","Droppable","Draggable","CardEditorDialog","Scrollbar","BoardList","Avatar","Card","ClickAwayListener","TextField","InputAdornment","IconButton","Icon","Button","connect","PropTypes","addNewColumnInBoard","reorderCardInList","reorderList","moveCardInList","ScrumBoardContainer","state","dataLoaded","list","shouldOpenDialog","shouldOpenAddList","columnTitle","handleCardClick","card","setState","handleDialogClose","handleAddListToggle","value","handleChange","event","key","shiftKey","props","handleAddList","target","onDragEnd","result","source","destination","board","droppableId","id","index","handleAddNewCard","provided","innerRef","droppableProps","map","column","snapshot","placeholder","minWidth","endAdornment","style","padding","mapStateToProps","func","isRequired","scrumboard","memberList","labelList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport CardEditorDialog from \"./CardEditorDialog\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport BoardList from \"./BoardList\";\nimport {\n  Avatar,\n  Card,\n  ClickAwayListener,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Icon,\n  Button\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addNewColumnInBoard } from \"./ScrumBoardService\";\nimport {\n  reorderCardInList,\n  reorderList,\n  moveCardInList\n} from \"../../redux/actions/ScrumBoardActions\";\n\nclass ScrumBoardContainer extends Component {\n  state = {\n    dataLoaded: false,\n    list: [],\n    shouldOpenDialog: false,\n    shouldOpenAddList: false,\n    columnTitle: \"\"\n  };\n\n  // convert this into a list instead of hard coded state object\n  componentDidMount() {}\n\n  handleCardClick = card => {\n    this.setState({ shouldOpenDialog: true, card: card });\n  };\n\n  handleDialogClose = () => {\n    this.setState({ shouldOpenDialog: false });\n  };\n\n  handleAddListToggle = value => {\n    this.setState({ shouldOpenAddList: value });\n  };\n\n  handleChange = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      this.props.handleAddList(this.state.columnTitle);\n      this.setState({ columnTitle: \"\" });\n    } else this.setState({ columnTitle: event.target.value });\n  };\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n    let { board, reorderCardInList, moveCardInList, reorderList } = this.props;\n\n    // if dropped outside of list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === \"horizontal-droppable\") {\n      reorderList(board.id, source.index, destination.index);\n    } else {\n      if (source.droppableId === destination.droppableId) {\n        reorderCardInList(\n          board.id,\n          source.droppableId,\n          source.index,\n          destination.index\n        );\n      } else {\n        moveCardInList(\n          board.id,\n          source.droppableId,\n          destination.droppableId,\n          source,\n          destination\n        );\n      }\n    }\n  };\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    let { shouldOpenDialog, shouldOpenAddList, columnTitle, card } = this.state;\n    let { list, handleAddList, handleAddNewCard } = this.props;\n\n    return (\n      <Scrollbar className=\"position-relative flex pb-16 w-100\">\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"horizontal-droppable\" direction=\"horizontal\">\n            {provided => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"flex\"\n              >\n                {list.map((column, index) => (\n                  <Draggable\n                    key={column.id}\n                    draggableId={column.id}\n                    index={index}\n                    type=\"column\"\n                  >\n                    {(provided, snapshot) => (\n                      <BoardList\n                        data={{ provided, snapshot, column }}\n                        handleCardClick={this.handleCardClick}\n                        handleDialogClose={this.handleDialogClose}\n                        handleAddNewCard={handleAddNewCard}\n                      ></BoardList>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        <div>\n          {shouldOpenAddList ? (\n            <ClickAwayListener\n              onClickAway={() => this.handleAddListToggle(false)}\n            >\n              <Card\n                style={{ minWidth: \"290px\" }}\n                className=\"list-column border-radius-0 cursor-pointer p-16\"\n                elevation={3}\n              >\n                <TextField\n                  className=\"mb-12\"\n                  variant=\"outlined\"\n                  name=\"columnTitle\"\n                  value={columnTitle}\n                  fullWidth\n                  onChange={this.handleChange}\n                  onKeyDown={this.handleChange}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => this.handleAddListToggle(false)}\n                        >\n                          <Icon fontSize=\"small\">clear</Icon>\n                        </IconButton>\n                      </InputAdornment>\n                    )\n                  }}\n                  inputProps={{\n                    style: {\n                      padding: \"10px\"\n                    }\n                  }}\n                />\n                <div className=\"flex flex-end\">\n                  <Button\n                    onClick={() => {\n                      handleAddList(columnTitle);\n                      this.setState({ columnTitle: \"\" });\n                    }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Add\n                  </Button>\n                </div>\n              </Card>\n            </ClickAwayListener>\n          ) : (\n            <Card\n              className=\"list-column cursor-pointer flex flex-middle py-16 px-16 bg-light-gray\"\n              elevation={3}\n              style={{ minWidth: \"290px\" }}\n              onClick={() => this.handleAddListToggle(true)}\n            >\n              <Avatar className=\"size-24 bg-error\">+</Avatar>\n              <span className=\"ml-8 font-weight-500\">Add List</span>\n            </Card>\n          )}\n        </div>\n\n        {shouldOpenDialog && (\n          <CardEditorDialog\n            card={card}\n            open={shouldOpenDialog}\n            handleClose={this.handleDialogClose}\n          ></CardEditorDialog>\n        )}\n      </Scrollbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reorderCardInList: PropTypes.func.isRequired,\n  reorderList: PropTypes.func.isRequired,\n  moveCardInList: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    reorderCardInList,\n    reorderList,\n    moveCardInList\n  }\n)(ScrumBoardContainer);\n"]},"metadata":{},"sourceType":"module"}